{"version":3,"sources":["UI/Button/Button.js","utilities/Validators.js","UI/Input/Input.js","components/Login/Login.js","store/redux/LoginRedux/LoginRedux.js","UI/Navbar/Navbar.js","components/MyProfile/ProfileDetail/ProfileDetail.js","components/MyProfile/EditProfile/EditProfile.js","components/MyProfile/MyProfile.js","components/Users/UserList/UserList.js","UI/BackDrop/BackDrop.js","UI/Modal/Modal.js","components/Users/CreateUser/EditUsers/EditUsers.js","components/Users/CreateUser/NewUser/NewUser.js","components/Users/CreateUser/CreateUser.js","UI/DropDown/DropDown.js","UI/Pagination/Pagination.js","components/Users/Users.js","container/Profile/Profile.js","components/CreatePost/CreatePost.js","store/redux/PostRedux/PostRedux.js","components/SharePost/SharePost.js","UI/ReadMore/ReadMore.js","components/AllPost/AllPost.js","container/Post/Post.js","UI/Spinner/Spinner.js","components/BlogPost/BlogPost.js","App.js","reportWebVitals.js","store/redux/root_redux.js","store/saga/LoginSaga/LoginSaga.js","store/saga/PostSaga/PostSaga.js","store/saga/root_saga.js","index.js"],"names":["Button","props","className","allProps","classNameProp","push","assignedClass","join","children","regex","email","RegExp","number","Validators","value","message","test","error","localValue","JSON","parse","localStorage","getItem","loginBlogApp","users","username","loggedInUser","match","toString","trim","length","validateInput","validators","i","check","console","log","Input","state","handleChange","event","onChange","target","updateError","setState","this","label","placeholder","type","data","inputClasses","touched","htmlFor","map","e","key","name","Component","defaultProps","Login","form","valid","password","submitHandler","preventDefault","isValid","every","v","submitButtonHandler","updatedValue","isAuthenticate","onSubmit","required","INITLIZE_APP","SIGNUP_SUBMIT_INIT","SIGNUP_SUBMIT_SUCCESS","LOGOUT_SESSION_INIT","LOGOUT_SESSION_SUCCESS","PROFILE_HANDLER_INIT","PROFILE_HANDLER_SUCCESS","POST_HANDLER_INIT","POST_HANDLER_SUCCESS","SAVE_INIT","SAVE_SUCCESS","EDIT_USER_INIT","EDIT_USER_SUCCESS","DELETE_USER_INIT","DELETE_USER_SUCCESS","SAVE_EDIT_USER_INIT","SAVE_EDIT_USER_SUCCESS","SAVE_CREATE_USER_INIT","SAVE_CREATE_USER_SUCCESS","initialState","isAuth","openProfile","openPost","usersDetail","editObject","action","Navbar","id","onClick","postHandler","data-toggle","firstName","lastName","aria-labelledby","profileHandler","logoutHandler","ProfileDetail","obj","details","Object","keys","editProfileHandler","EditProfile","role","phonenumber","values","saveButtonHandler","changeModeHandler","phoneNumber","MyProfile","editMode","editHandler","onSaveHandler","connect","dispatch","loginAction","UserList","editClick","deleteHandler","deleteClick","eachChild","Backdrop","show","clicked","Modal","nextProps","nextState","modelClosed","style","transform","opacity","EditUser","userCheck","NewUser","CreateUser","createUser","EditUsers","saveUserButtonHandler","activePopup","DropDown","options","opt","Pagination","postPerPage","totalPosts","paginate","currentPage","pageSelect","pageNumbers","lastPage","Math","ceil","disabled","Users","ediMode","sortType","EditHandler","onEditHandler","createHandler","modelClicked","pagePerPost","onSort","indexOfLastPost","indexOfFirstPost","reverse","slice","sort","a","b","localeCompare","onDeleteHandler","fontSize","onSaveButtonHandler","onSaveUserButtonHandler","editUser","Profile","toggleTab","toggleTabClick","index","CreatePost","post","counter","date","today","Date","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","INITILIZE_POST_INIT","INITILIZE_POST_SUCCESS","POST_CLICK_INIT","POST_CLICK_SUCCESS","SAVE_POST_INIT","SAVE_POST_SUCCESS","SHARE_POST_INIT","SHARE_POST_SUCCESS","postClickInit","userPost","postClickSuccess","pendingPostArray","approvedPost","adminPost","Post","SharePost","selecteduser","shareButton","checkBoxHandler","userName","checked","editObjIndex","findIndex","user","splice","selectedPost","ReadMore","toggleSwitch","readMore","toggleHandler","textRead","text","AllPost","checkBox","checkBoxPopUp","window","confirm","onSharedHandler","width","tabContent","postAction","selectedUser","onPost","onInitlizer","prevProps","Spinner","loading","color","size","BlogPost","setTimeout","App","isSubmit","confirmLogoutHandler","onLogoutHandler","onInitlizeApp","onProfileHandler","onPostHandler","onSubmitHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","initilizeHandlerSaga","submitHandlerSaga","logoutHandlerSaga","profileHandlerSaga","postHandlerSaga","saveHandlerSaga","editUserHandlerSaga","deleteUserHandlerSaga","saveUserHandlerSaga","saveCreateUserHandlerSaga","removeItem","userArrayDetail","setItem","stringify","loginBlog","put","updateValue","find","initilizeSage","savePostHandlerSaga","allPostClickSaga","sharePostHandlerSaga","userPosts","arrayPost","sharePost","postObject","approved","forEach","j","localObject","editObjectIndex","watch","takeLatest","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ee29ef9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => {\r\n  const { className, ...allProps } = { ...props };\r\n  \r\n  let classNameProp = [\"btn btn-outline-info\"];\r\n  if (className) {\r\n    classNameProp.push(className);\r\n  }\r\n  let assignedClass = classNameProp.join(\" \");\r\n  return (  \r\n      <button className={assignedClass} {...allProps}>\r\n        {props.children}\r\n      </button>   \r\n  );\r\n};\r\nButton.propTypes = {\r\n  className : PropTypes.string,\r\n  onClick : PropTypes.func  \r\n}\r\nexport default Button;","const regex = {\r\n  email: new RegExp(\r\n    \"^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@]+)*)|(.+))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$\"\r\n  ),\r\n  number: new RegExp(\"^[0-9]+$\"),\r\n\r\n\r\n};\r\n\r\nexport class Validators {\r\n  static email(value, message) {\r\n    if (value) {\r\n      const result = regex.email.test(value);\r\n      if (!result) return { error: true, message };\r\n    }\r\n  }\r\n  static userCheck(value, message) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlogApp = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for (let users in localValue) {\r\n      if (localValue[users].username === value  && message !== \"User cant be Same\") {\r\n        return { error: true, message };\r\n      }\r\n      else if(loginBlogApp.loggedInUser.username === value && message === \"User cant be Same\"){\r\n        return false\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  static phoneNumber(value, message) {\r\n    let phoneno = /^[0-9]{10}$/;\r\n    if(value){\r\n      if(!value.match(phoneno)){\r\n        return { error: true, message }\r\n      }\r\n      else{\r\n        return false\r\n      }\r\n    }    \r\n    return false;\r\n  }\r\n  static required(value, message) {\r\n    if (!value || !value.toString().trim().length) {\r\n      return { error: true, message };\r\n    }\r\n    return false;\r\n  }\r\n  static number(value, message) {\r\n    const length = value ? value.toString().length : 0;\r\n    if (length > 0) {\r\n      const result = regex.number.test(value);\r\n      if (!result) {\r\n        return { error: true, message };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\nexport const validateInput = (validators, value) => {\r\n  if (validators && validators.length) {\r\n    for (let i = 0; i < validators.length; i++) {\r\n      const error = validators[i].check(value, validators[i].message);\r\n      console.log(error);\r\n      if (error) {\r\n        return error;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};","// import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {validateInput} from \"../../utilities/Validators\";\r\n\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Input extends Component {\r\n    state = {\r\n        error : false\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        const { validators,  onChange} = {...this.props}\r\n        const value = event.target.value;\r\n        const updateError = validateInput(validators,value);\r\n        this.setState({error : updateError},()=>{\r\n            onChange(value,this.state.error);\r\n        });\r\n    };\r\n    render() {\r\n      \r\n        const {value, label, placeholder, type, data,touched} = {...this.props}\r\n\r\n        const inputClasses = [\"form-control\"];\r\n        if(touched ){\r\n            this.state.error ? inputClasses.push(\"is-invalid\") : inputClasses.push(\"is-valid\")\r\n        }\r\n        return (\r\n            <div className=\"form-group\">\r\n            {label && <label htmlFor=\"app-input-field\">{label}</label>}\r\n            {type === 'textarea' ? \r\n                <textarea\r\n                    type ={type}\r\n                    className= {inputClasses.join(' ')}\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                />\r\n             : type === \"select\" ? \r\n                <select\r\n                   type={type}\r\n                    value={value}\r\n                    className={inputClasses.join(' ')}\r\n                    placeholder={placeholder}\r\n                    onChange={this.handleChange}>\r\n                    {data.map((e, key) => {\r\n                        return <option key={key} value={e.name}>{e.name}</option>;\r\n                    })}\r\n            </select> : (\r\n                <input\r\n                    type={type}\r\n                    value={value}\r\n                    className={inputClasses.join(' ')}\r\n                    placeholder={placeholder}\r\n                    onChange={this.handleChange}\r\n                /> \r\n            )}\r\n            {this.state.error && <span className='text-danger'>{this.state.error.message}</span>}\r\n        </div>\r\n    )\r\n        \r\n    }\r\n}\r\n\r\nInput.propTypes = {\r\n    value:  PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n      ]),\r\n    label: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    validators: PropTypes.array,\r\n    type: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    data : PropTypes.array\r\n};\r\n\r\nInput.defaultProps = {\r\n  value: '',\r\n  label: '',\r\n  placeholder: '',\r\n  type: 'text',\r\n  validators: [],\r\n  data : []\r\n};\r\n// const Input = ({value, label, placeholder, validators, type, onChange,data,touched}) => {\r\n//     const [error, setError] = useState(false);\r\n    \r\n//     const this.handleChange = (event) => {\r\n//         const {value} = event.target;\r\n//         console.log(validateInput(validators));\r\n//         setError(validateInput(validators,value));\r\n//         onChange(value,error);\r\n//     };\r\n\r\n// const inputClasses = [\"form-control\"];\r\n// if(touched ){\r\n//    error ? inputClasses.push(\"is-invalid\") : inputClasses.push(\"is-valid\")\r\n// }\r\n    \r\n//     return (\r\n//         <div className=\"form-group\">\r\n//             {label && <label htmlFor=\"app-input-field\">{label}</label>}\r\n//             {type === 'textarea' ? \r\n//                 <textarea\r\n//                     type ={type}\r\n//                     className= {inputClasses.join(' ')}\r\n//                     placeholder={placeholder}\r\n//                     value={value}\r\n//                     onChange={this.handleChange}\r\n//                 />\r\n//              : type === \"select\" ? \r\n//                 <select\r\n//                    type={type}\r\n//                     value={value}\r\n//                     className={inputClasses.join(' ')}\r\n//                     placeholder={placeholder}\r\n//                     onChange={this.handleChange}>\r\n//                     {data.map((e, key) => {\r\n//                         return <option key={key} value={e.name}>{e.name}</option>;\r\n//                     })}\r\n//             </select> : (\r\n//                 <input\r\n//                     type={type}\r\n//                     value={value}\r\n//                     className={inputClasses.join(' ')}\r\n//                     placeholder={placeholder}\r\n//                     onChange={this.handleChange}\r\n//                 /> \r\n//             )}\r\n//             {error && <span className='text-danger'>{error.message}</span>}\r\n//         </div>\r\n//     )\r\n// };\r\n\r\n// Input.propTypes = {\r\n//     value:  PropTypes.oneOfType([\r\n//         PropTypes.string,\r\n//         PropTypes.number\r\n//       ]),\r\n//     label: PropTypes.string,\r\n//     placeholder: PropTypes.string,\r\n//     validators: PropTypes.array,\r\n//     type: PropTypes.string,\r\n//     onChange: PropTypes.func.isRequired,\r\n//     data : PropTypes.array\r\n// };\r\n\r\n// Input.defaultProps = {\r\n//   value: '',\r\n//   label: '',\r\n//   placeholder: '',\r\n//   type: 'text',\r\n//   validators: [],\r\n//   data : []\r\n// };\r\n\r\n// export default Input;","import Button from \"../../UI/Button/Button\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport { Validators } from \"../../utilities/Validators\";\r\nimport \"./Login.css\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    form : {\r\n      username: {value : \"\" , valid : false,touched : false},\r\n      password: {value : \"\" , valid : false,touched : false}\r\n    },\r\n    touched: false,\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ touched: true });\r\n    let valid = [];\r\n    for(let key in this.state.form){   \r\n      this.state.form[key].value !== \"\" && this.state.form[key].valid === true ? valid.push(true) : valid.push(false);  \r\n    }\r\n    const isValid = valid.every(v => v === true)    \r\n    isValid &&  this.props.submitButtonHandler(this.state.form, isValid);\r\n  };\r\n\r\n  handleChange = (key) => (value,error) => {\r\n    let updatedValue = {...this.state.form}\r\n    updatedValue[key]= {value :value,valid :!error,touched : true}\r\n    this.setState({form : updatedValue});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <div className=\"container my-5\">\r\n          <h1 className=\"display-4 heading\">Blog post Login</h1>\r\n          <div className=\"jumbotron\">\r\n            {!this.props.isAuthenticate && this.state.touched && (\r\n              <small className=\"form-text text-muted textIfFail\">\r\n                Please get Approval From Admin Or Check UserName & Password.\r\n              </small>\r\n            )}\r\n            <form className=\"form\" onSubmit={this.submitHandler}>\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  type=\"text\"\r\n                  label=\"User Name\"\r\n                  placeholder=\"Enter Your User Name\"\r\n                  value={this.state.form.username.value}\r\n                  onChange={this.handleChange(\"username\")}\r\n                  validators={[\r\n                    {\r\n                      check: Validators.required,\r\n                      message: \"Field Is Required\",\r\n                    },\r\n                  ]}\r\n                  touched = {this.state.form.username.touched}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  placeholder=\"Enter Your Password\"\r\n                  value={this.state.form.password.value}\r\n                  onChange={this.handleChange(\"password\")}\r\n                  validators={[\r\n                    {\r\n                      check: Validators.required,\r\n                      message: \"Field Is Required\",\r\n                    },\r\n                  ]}\r\n                  touched = {this.state.form.password.touched}\r\n                />\r\n              </div>\r\n              <Button>SignUp</Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;","export const INITLIZE_APP = \"INITLIZE_APP\";\r\nexport const SIGNUP_SUBMIT_INIT = \"SIGNUP_SUBMIT_INIT\";\r\nexport const SIGNUP_SUBMIT_SUCCESS = \"SIGNUP_SUBMIT_SUCCESS\";\r\nexport const LOGOUT_SESSION_INIT = \"LOGOUT_SESSION_INIT\";\r\nexport const LOGOUT_SESSION_SUCCESS = \"LOGOUT_SESSION_SUCCESS\";\r\nexport const PROFILE_HANDLER_INIT = \"PROFILE_HANDLER_INIT\";\r\nexport const PROFILE_HANDLER_SUCCESS= \"PROFILE_HANDLER_SUCCESS\";\r\nexport const POST_HANDLER_INIT = \"POST_HANDLER_INIT\";\r\nexport const POST_HANDLER_SUCCESS= \"POST_HANDLER_SUCCESS\";\r\nexport const SAVE_INIT = \"SAVE_INIT\";\r\nexport const SAVE_SUCCESS = \"SAVE_SUCCESS\";\r\nexport const EDIT_USER_INIT = \"EDIT_USER_INIT\";\r\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\r\nexport const DELETE_USER_INIT = \"DELETE_USER_INIT\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const SAVE_EDIT_USER_INIT = \"SAVE_EDIT_USER_INIT\";\r\nexport const SAVE_EDIT_USER_SUCCESS = \"SAVE_EDIT_USER_SUCCESS\";\r\nexport const SAVE_CREATE_USER_INIT = \"SAVE_CREATE_USER_INIT\";\r\nexport const SAVE_CREATE_USER_SUCCESS = \"SAVE_CREATE_USER_SUCCESS\";\r\n\r\nexport const initlizerAppInit = () =>{\r\n    return{\r\n        type : INITLIZE_APP\r\n    }\r\n}\r\nexport const submitHandlerInit = (values,valid) =>{ \r\n    return{\r\n        type : SIGNUP_SUBMIT_INIT,\r\n        username : values.username.value,\r\n        password : values.password.value,\r\n        isAuth : valid\r\n    }\r\n}\r\nexport const submitHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : SIGNUP_SUBMIT_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        isAuth : loginBlogApp.isAuth,\r\n        openProfile : loginBlogApp.openProfile,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\n\r\nexport const logoutHandlerInit = () =>{\r\n    return{\r\n        type : LOGOUT_SESSION_INIT\r\n    }\r\n}\r\nexport const logoutHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : LOGOUT_SESSION_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        isAuth : loginBlogApp.isAuth,\r\n        openPost:loginBlogApp.openPost,\r\n        openProfile : loginBlogApp.openProfile\r\n    \r\n    }\r\n}\r\nexport const profileHandlerInit = () =>{\r\n    return{\r\n        type : PROFILE_HANDLER_INIT\r\n    }\r\n}\r\nexport const profileHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : PROFILE_HANDLER_SUCCESS,\r\n        openProfile : loginBlogApp.openProfile,\r\n        openPost : loginBlogApp.openPost\r\n    }\r\n}\r\nexport const postHandlerInit = () =>{\r\n return{\r\n     type : POST_HANDLER_INIT\r\n }   \r\n}\r\nexport const postHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : POST_HANDLER_SUCCESS,\r\n        openProfile : loginBlogApp.openProfile,\r\n        openPost : loginBlogApp.openPost\r\n    }   \r\n   }\r\n\r\n   export const saveHandlerInit = (values) =>{  \r\n    console.log(values);\r\n    return{\r\n        type : SAVE_INIT,\r\n        values : values\r\n    }\r\n}\r\nexport const saveHandlerSuccess = (loginBlogApp) =>{  \r\n    return{\r\n        type : SAVE_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nexport const editUserHandlerInit = (username) =>{\r\n    return{\r\n        type : EDIT_USER_INIT,\r\n        username : username\r\n    }\r\n}\r\nexport const editUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : EDIT_USER_SUCCESS,\r\n        editObject : loginBlogApp.editObject\r\n    }\r\n}\r\n\r\nexport const deleteUserHandlerInit = (username) =>{\r\n    return{\r\n        type : DELETE_USER_INIT,\r\n        username : username\r\n    }\r\n}\r\nexport const deleteUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : DELETE_USER_SUCCESS,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nexport const saveUserHandlerInit = (editUser) =>{\r\n    return{\r\n        type : SAVE_EDIT_USER_INIT,\r\n        editUser : editUser\r\n    }\r\n}\r\n\r\nexport const saveUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n     type : SAVE_EDIT_USER_SUCCESS,\r\n     usersDetail : loginBlogApp.usersDetail,\r\n     editObject : loginBlogApp.editObject,\r\n     loggedInUser : loginBlogApp.loggedInUser   \r\n    }\r\n}\r\nexport const createUserHandlerInit = (editUser) =>{\r\n    return{\r\n        type : SAVE_CREATE_USER_INIT,\r\n        editUser : editUser\r\n    }\r\n}\r\n\r\nexport const createUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n     type : SAVE_CREATE_USER_SUCCESS,\r\n     usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nconst initialState = {\r\n    loggedInUser:{},\r\n    isAuth:false,\r\n    openProfile : false,\r\n    openPost : true,\r\n    usersDetail : [],\r\n    editObject : {},\r\n  \r\n}\r\nconst Login = (state =initialState ,action) =>{\r\n    switch(action.type){\r\n        case SIGNUP_SUBMIT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser : action.loggedInUser,\r\n            isAuth : action.isAuth,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case LOGOUT_SESSION_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser :action.loggedInUser,\r\n            isAuth : action.isAuth,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case PROFILE_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case POST_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case SAVE_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser : action.loggedInUser,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case EDIT_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editObject : action.editObject,\r\n        }\r\n        case DELETE_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case SAVE_EDIT_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail,\r\n            editObject : action.editObject,\r\n            loggedInUser : action.loggedInUser\r\n        }\r\n        case SAVE_CREATE_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div\r\n            className=\"collapse navbar-collapse container\"\r\n            id=\"navbarSupportedContent\"\r\n          >\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item dropdown\">\r\n                <p\r\n                  className=\"nav-link\"\r\n                  onClick={props.postHandler}\r\n                >\r\n                  <CommentIcon />\r\n                  Posts\r\n                </p>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <div id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item dropdown\">\r\n                    <p\r\n                      className=\"nav-link dropdown-toggle\"\r\n                      id=\"navbarDropdown\"\r\n                      data-toggle=\"dropdown\"\r\n                    >\r\n                      <AccountCircleRoundedIcon />\r\n                      {`${props.loggedInUser.firstName} ${props.loggedInUser.lastName}`}\r\n                    </p>\r\n                    <div\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"navbarDropdown\"\r\n                    >\r\n                      <p\r\n                        className=\"dropdown-item\"\r\n                        id=\"dropdownUserProfile\"\r\n                        onClick={props.profileHandler}\r\n                      >\r\n                        Profile\r\n                      </p>\r\n                      <p\r\n                        className=\"dropdown-item\"\r\n                        id=\"dropdownUserSignOut\"\r\n                        onClick = {props.logoutHandler}\r\n                      >\r\n                        SignOut\r\n                      </p>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </nav> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from \"react\";\r\nimport \"./ProfileDetail.css\";\r\nimport Button from \"../../../UI/Button/Button\";\r\nexport default class ProfileDetail extends Component {\r\n  render() {\r\n    const obj = this.props.loggedInUser;\r\n    const details = Object.keys(obj).map((key) => {\r\n      return (\r\n        <div className = \"col-sm-6\" key={key}> \r\n        <div className = \"row\">\r\n        <label className=\"col-sm-4 labelText\" >{key}:</label>\r\n          <div className=\"col-sm-8 \">\r\n            <p className=\"textPara\">{obj[key]}</p>\r\n          </div>\r\n        </div>            \r\n          </div>\r\n      \r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"jumbotron text-center my-5 mx-auto\">\r\n        <div className=\"form-group row justify-content-across\">{details}</div>\r\n        <Button\r\n          className=\"btn btn-outline-info\"\r\n          id=\"editProfileBtn\"\r\n          onClick={this.props.editProfileHandler}\r\n        >\r\n          EDIT\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Validators } from \"../../../utilities/Validators\";\r\nimport Button from \"../../../UI/Button/Button\";\r\nimport Input from \"../../../UI/Input/Input\";\r\n\r\nclass EditProfile extends Component {\r\n  state = {\r\n    form: {\r\n      username: { value: this.props.loggedInUser.username, valid: true,touched : false },\r\n      role: { value: this.props.loggedInUser.role, valid: true,touched : false },\r\n      password: { value: this.props.loggedInUser.password, valid: true,touched : false },\r\n      firstName: { value: this.props.loggedInUser.firstName, valid: true,touched : false },\r\n      lastName: { value: this.props.loggedInUser.lastName, valid: true,touched : false },\r\n      phonenumber: { value: this.props.loggedInUser.phonenumber, valid: true,touched : false },\r\n    },\r\n    touched: false\r\n  }\r\n  // Input Handler Change\r\n  handleChange = (key) => (value, error) => {\r\n    let updatedValue = { ...this.state.form }\r\n    console.log(error);\r\n    updatedValue[key] = { value: value, valid: !error,touched :true }\r\n    this.setState({ form: updatedValue });\r\n  };\r\n  // Submit Button\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ touched: true });\r\n    let valid = [];\r\n    for (let key in this.state.form) {\r\n      console.log(this.state.form[key].valid)\r\n      this.state.form[key].value !== \"\" && this.state.form[key].valid === true ? valid.push(true) : valid.push(false);\r\n    }\r\n    console.log(valid);\r\n    const isValid = valid.every(v => v === true)\r\n   \r\n    if(isValid ){\r\n      let values = { }\r\n      values = {\r\n        username : this.state.form.username.value,\r\n        role : this.state.form.role.value,\r\n        password : this.state.form.password.value,\r\n        firstName : this.state.form.firstName.value,\r\n        lastName : this.state.form.lastName.value,\r\n        phonenumber : this.state.form.phonenumber.value\r\n    }\r\n   this.props.saveButtonHandler(values,isValid);\r\n   this.props.changeModeHandler();   \r\n    } \r\n  };\r\n  render() {\r\n    const details = (\r\n      <>\r\n        {/* User Name */}\r\n        <label className=\"col-sm-2 labelText\">User Name :</label>\r\n        <div className=\"col-sm-4 \">\r\n          <p className=\"textPara\">{this.state.form.username.value}</p>\r\n        </div>\r\n        {/* Password */}\r\n        <label className=\"col-sm-2 labelText\">Password :</label>\r\n        <div className=\"col-sm-4 \">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Password\"\r\n          value={this.state.form.password.value}\r\n          onChange={this.handleChange(\"password\")}\r\n          validators={[\r\n            {\r\n              check: Validators.required,\r\n              message: \"Please Enter Password\",\r\n            },\r\n          ]}\r\n          touched = {this.state.form.password.touched}\r\n        />\r\n        </div>\r\n        \r\n        {/* Role */}\r\n        <label className=\"col-sm-2 labelText\">Role :</label>\r\n        <div className=\"col-sm-4 \">\r\n          <p className=\"textPara\">{this.state.form.role.value}</p>\r\n        </div>\r\n        {/* First Name */}\r\n        <label className=\"col-sm-2 labelText\">First Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your FirstName\"\r\n          value={this.state.form.firstName.value}\r\n          onChange={this.handleChange(\"firstName\")}\r\n          validators={[\r\n            {\r\n              check: Validators.required,\r\n              message: \"Please Enter First Name\",\r\n            },\r\n          ]}\r\n          touched = {this.state.form.firstName.touched}\r\n        />\r\n        </div>\r\n\r\n        {/* Last Name */}\r\n        <label className=\"col-sm-2 labelText\">Last Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your LastName\"\r\n          value={this.state.form.lastName.value}\r\n          onChange={this.handleChange(\"lastName\")}\r\n          validators={[\r\n            {\r\n              check: Validators.required,\r\n              message: \"Please Enter Last Name\",\r\n            },\r\n          ]}\r\n          touched = {this.state.form.lastName.touched}\r\n        />\r\n        </div>\r\n          \r\n        {/* Mobile Number */}\r\n        <label className=\"col-sm-2 labelText\">Mobile Number:</label>\r\n        <div className=\"col-sm-4 \">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Mobile Number\"\r\n          value={this.state.form.phonenumber.value}\r\n          onChange={this.handleChange(\"phonenumber\")}\r\n          validators={[\r\n            {\r\n              check: Validators.phoneNumber,\r\n              message: \"Please Enter Valid Mobile Number\",\r\n            },\r\n          ]}\r\n          touched = {this.state.form.phonenumber.touched}\r\n        />\r\n        </div>\r\n      </>\r\n    )\r\n    return (\r\n      <div className=\"jumbotron text-center my-5 mx-auto\">\r\n        <div className=\"form-group row justify-content-across\">\r\n          {details}\r\n        </div>\r\n        <Button\r\n          onClick={(event)=>this.submitHandler(event)}\r\n        >\r\n          SAVE\r\n      </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default EditProfile","import React, { Component } from \"react\";\r\nimport ProfileDetail from \"./ProfileDetail/ProfileDetail\";\r\nimport EditProfile from \"./EditProfile/EditProfile\";\r\nimport {connect} from \"react-redux\";\r\nimport * as loginAction from \"../../store/redux/LoginRedux/LoginRedux\";\r\n\r\n class MyProfile extends Component {\r\n    state ={\r\n        editMode : false \r\n    }\r\n    editHandler = () =>{\r\n        this.setState({editMode : true})\r\n    }\r\n    changeModeHandler = () =>{      \r\n      this.setState({editMode : false});\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      <div >   \r\n        {!this.state.editMode ? \r\n         <ProfileDetail loggedInUser = {this.props.loggedInUser} editProfileHandler = {this.editHandler}/>\r\n          : <EditProfile loggedInUser = {this.props.loggedInUser} saveButtonHandler = {this.props.onSaveHandler} changeModeHandler = {this.changeModeHandler}/> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        // isValid : state.MyProfile.isValid,\r\n        loggedInUser : state.Login.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onSaveHandler : (values,valid) =>{dispatch(loginAction.saveHandlerInit(values,valid))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyProfile)","import React, { Component } from 'react'\r\nimport Button from \"../../../UI/Button/Button\";\r\n\r\nexport default class UserList extends Component {\r\n    \r\n    editHandler =() =>{\r\n        this.props.editClick(this.props.username)\r\n    }\r\n    deleteHandler = () =>{\r\n        this.props.deleteClick(this.props.username);\r\n    }\r\n    render() {\r\n        let eachChild = (\r\n            <tr key={this.props.username}>\r\n                <td>{this.props.username}</td>\r\n                <td>{this.props.password}</td>\r\n                <td>{this.props.role}</td>\r\n                <td>{this.props.firstName}</td>\r\n                <td>{this.props.lastName}</td>\r\n                <td>{this.props.phonenumber}</td>\r\n                <td>\r\n                    <Button className = \"btn-sm\" onClick = {this.editHandler}>Edit</Button>\r\n                </td>\r\n                <td>\r\n                    <Button className = \"btn-sm\" onClick = {this.deleteHandler}>Delete</Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n        return (\r\n            <>\r\n                <tbody>\r\n                    {eachChild}\r\n                </tbody>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport \"./BackDrop.css\";\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n\r\n)\r\n  \r\n\r\n\r\nexport default Backdrop\r\n","import React, { Component } from 'react';\r\nimport \"./Modal.css\";\r\n// import Aux from \"../../../hoc/Auxilary\";\r\nimport Backdrop from \"../BackDrop/BackDrop\";\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps,nextState){\r\n       return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }  \r\n    render(){\r\n        return (\r\n            <>\r\n            <Backdrop show={this.props.show} clicked={this.props.modelClosed}/>\r\n            <div className=\"Modal\"\r\n            style={{\r\n                transform:this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                opacity: this.props.show ? \"1\" : \"0\"\r\n            }}>\r\n                {this.props.children}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal\r\n","import React, { Component } from \"react\";\r\nimport { Validators } from \"../../../../utilities/Validators\";\r\nimport Input from \"../../../../UI/Input/Input\";\r\nimport Button from \"../../../../UI/Button/Button\";\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    form: {\r\n      username: {\r\n        value: this.props.editObject.username,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n      role: { value: this.props.editObject.role, valid: true, touched: false },\r\n      password: {\r\n        value: this.props.editObject.password,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n      firstName: {\r\n        value: this.props.editObject.firstName,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n      lastName: {\r\n        value: this.props.editObject.lastName,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n      phonenumber: {\r\n        value: this.props.editObject.phonenumber,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n    },\r\n    touched: false,\r\n  };\r\n  // Input Handler Change\r\n  handleChange = (key) => (value, error) => {\r\n    console.log(key,error);\r\n    let updatedValue = { ...this.state.form };\r\n    updatedValue[key] = { value: value, valid: !error, touched: true };\r\n    this.setState({ form: updatedValue });\r\n  };\r\n  // Submit Button\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ touched: true });\r\n    let valid = [];\r\n    for (let key in this.state.form) {\r\n      console.log(this.state.form[key])\r\n      this.state.form[key].value !== \"\" && this.state.form[key].valid === true\r\n        ? valid.push(true)\r\n        : valid.push(false);\r\n    }\r\n    const isValid = valid.every((v) => v === true);\r\n    if (isValid) {\r\n      let values = {};\r\n      values = {\r\n        username: this.state.form.username.value,\r\n        role: this.state.form.role.value,\r\n        password: this.state.form.password.value,\r\n        firstName: this.state.form.firstName.value,\r\n        lastName: this.state.form.lastName.value,\r\n        phonenumber: this.state.form.phonenumber.value,\r\n      };\r\n      this.props.saveButtonHandler(values);\r\n      this.props.changeModeHandler();\r\n    }\r\n  };\r\n  render() {\r\n    const details = (\r\n      <>\r\n        {/* User Name */}\r\n        <label className=\"col-sm-2 labelText \">User Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your User Name\"\r\n            value={this.state.form.username.value}\r\n            onChange={this.handleChange(\"username\")}\r\n            validators={[\r\n              {\r\n                    check: Validators.userCheck,\r\n                    message: \"User cant be Same\",\r\n                  },\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter Your User Name\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.username.touched}\r\n          />\r\n        </div>\r\n        {/* Password */}\r\n        <label className=\"col-sm-2 labelText\">Password :</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Password\"\r\n            value={this.state.form.password.value}\r\n            onChange={this.handleChange(\"password\")}\r\n            validators={[\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter Password\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.password.touched}\r\n          />\r\n        </div>\r\n\r\n        {/* Role */}\r\n        <label className=\"col-sm-2 labelText\">Role :</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"select\"\r\n            placeholder=\"Select Your Gender\"\r\n            value={this.state.form.role.value}\r\n            onChange={this.handleChange(\"role\")}\r\n            validators={[\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter First Name\",\r\n              },\r\n            ]}\r\n            data={[{ name: \"user\" }, { name: \"admin\" }]}\r\n          />\r\n        </div>\r\n        {/* First Name */}\r\n        <label className=\"col-sm-2 labelText\">First Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your FirstName\"\r\n            value={this.state.form.firstName.value}\r\n            onChange={this.handleChange(\"firstName\")}\r\n            validators={[\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter First Name\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.firstName.touched}\r\n          />\r\n        </div>\r\n        {/* Last Name */}\r\n        <label className=\"col-sm-2 labelText\">Last Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your LastName\"\r\n            value={this.state.form.lastName.value}\r\n            onChange={this.handleChange(\"lastName\")}\r\n            validators={[\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter Last Name\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.lastName.touched}\r\n          />\r\n        </div>\r\n\r\n        {/* Mobile Number */}\r\n        <label className=\"col-sm-2 labelText\">Mobile Number:</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Mobile Number\"\r\n            value={this.state.form.phonenumber.value}\r\n            onChange={this.handleChange(\"phonenumber\")}\r\n            validators={[\r\n              {\r\n                check: Validators.phoneNumber,\r\n                message: \"Please Enter Valid Mobile Number\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.phonenumber.touched}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n          <div className=\"form-group row justify-content-across\">{details}</div>\r\n          <Button onClick={this.submitHandler}>Save Edit</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditUser;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../../../../UI/Input/Input\";\r\nimport Button from \"../../../../UI/Button/Button\";\r\nimport {Validators} from \"../../../../utilities/Validators\";\r\n\r\nclass NewUser extends Component{\r\n    state = {\r\n        form: {\r\n          username: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n          role: { value: \"user\", valid: true, touched: false },\r\n          password: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n          firstName: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n          lastName: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n          phonenumber: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n        },\r\n        touched: false,\r\n      };\r\n      // Input Handler Change\r\n      handleChange = (key) => (value, error) => {\r\n          console.log(error)\r\n        let updatedValue = { ...this.state.form };\r\n        updatedValue[key] = { value: value, valid: !error, touched: true };\r\n        this.setState({ form: updatedValue });\r\n      };\r\n      // Submit Button\r\n      submitHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ touched: true });\r\n        let valid = [];\r\n        for (let key in this.state.form) {\r\n          this.state.form[key].value !== \"\" && this.state.form[key].valid === true\r\n            ? valid.push(true)\r\n            : valid.push(false);\r\n        }\r\n        console.log(this.state.form)\r\n        console.log(valid);\r\n        const isValid = valid.every((v) => v === true);\r\n        if (isValid) {\r\n          let values = {};\r\n          values = {\r\n            username: this.state.form.username.value,\r\n            role: this.state.form.role.value,\r\n            password: this.state.form.password.value,\r\n            firstName: this.state.form.firstName.value,\r\n            lastName: this.state.form.lastName.value,\r\n            phonenumber: this.state.form.phonenumber.value,\r\n          };\r\n          this.props.saveButtonHandler(values);\r\n          this.props.changeModeHandler();\r\n        }\r\n      };\r\n      render() {\r\n        const details = (\r\n          <>\r\n            {/* User Name */}\r\n            <label className=\"col-sm-2 labelText \">User Name:</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter Your User Name\"\r\n                value={this.state.form.username.value}\r\n                onChange={this.handleChange(\"username\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.userCheck,\r\n                    message: \"User Name Already Exists\",\r\n                  },\r\n                  {\r\n                    check: Validators.required,\r\n                    message: \"Please Enter UserName\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.username.touched}\r\n              />\r\n            </div>\r\n            {/* Password */}\r\n            <label className=\"col-sm-2 labelText\">Password :</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter Your Password\"\r\n                value={this.state.form.password.value}\r\n                onChange={this.handleChange(\"password\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.required,\r\n                    message: \"Please Enter Password\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.password.touched}\r\n              />\r\n            </div>\r\n    \r\n            {/* Role */}\r\n            <label className=\"col-sm-2 labelText\">Role :</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"select\"\r\n                placeholder=\"Select Your Gender\"\r\n                value={this.state.form.role.value}\r\n                onChange={this.handleChange(\"role\")}             \r\n                data={[{ name: \"user\" }, { name: \"admin\" }]}\r\n                touched={this.state.form.role.touched}\r\n              />\r\n            </div>\r\n            {/* First Name */}\r\n            <label className=\"col-sm-2 labelText\">First Name:</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter Your FirstName\"\r\n                value={this.state.form.firstName.value}\r\n                onChange={this.handleChange(\"firstName\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.required,\r\n                    message: \"Please Enter First Name\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.firstName.touched}\r\n              />\r\n            </div>\r\n            {/* Last Name */}\r\n            <label className=\"col-sm-2 labelText\">Last Name:</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter Your LastName\"\r\n                value={this.state.form.lastName.value}\r\n                onChange={this.handleChange(\"lastName\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.required,\r\n                    message: \"Please Enter Last Name\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.lastName.touched}\r\n              />\r\n            </div>\r\n    \r\n            {/* Mobile Number */}\r\n            <label className=\"col-sm-2 labelText\">Mobile Number:</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"number\"\r\n                placeholder=\"Enter Your Mobile Number\"\r\n                value={this.state.form.phonenumber.value}\r\n                onChange={this.handleChange(\"phonenumber\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.phoneNumber,\r\n                    message: \"Please Enter Valid Mobile Number\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.phonenumber.touched}\r\n              />\r\n            </div>\r\n          </>\r\n        );\r\n        return (\r\n          <div>\r\n            <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n              <div className=\"form-group row justify-content-across\">{details}</div>\r\n              <Button onClick={this.submitHandler}>Save Edit</Button>\r\n            </div>\r\n          </div>\r\n        );\r\n        }\r\n    \r\n       \r\n}\r\nexport default NewUser; \r\n// const EditUsers = (props) => {\r\n\r\n//     const[editUser,setEditUser] = useState({\r\n//         username: \"\",\r\n//         role: \"\",\r\n//         password: \"\",\r\n//         firstName: \"\",\r\n//         lastName: \"\",\r\n//         phonenumber: \"\",\r\n//     })\r\n\r\n//     const[errors,setError] = useState({});\r\n        \r\n//     const inputHandler = event =>{\r\n//         const{name,value} = event.target\r\n//         setEditUser({\r\n//             ...editUser,\r\n//             [name] : value\r\n//         })\r\n//     }\r\n\r\n//     const submitHandler = (e) =>{\r\n//         e.preventDefault();\r\n//          const{errors,valid} = validation(editUser);\r\n//          setError(errors);\r\n//         valid && props.saveButtonHandler(editUser);\r\n//         valid && props.changeModeHandler();\r\n//     };\r\n\r\n//     const obj = editUser\r\n//     const details = Object.keys(obj).map((key) => {\r\n//         return(\r\n//             <>\r\n//             <label className=\"col-sm-2 labelText my-3\">{key}:</label>\r\n//             <div className=\"col-sm-4 \">\r\n//               <input\r\n//                 type = {key}\r\n//                 className=\"form-control my-3\"\r\n//                 defaultValue = {obj[key]}\r\n//                 value={editUser.key}\r\n//                 onChange={inputHandler}\r\n//                 placeholder={key}\r\n//                 name = {key}\r\n//               />\r\n//             {errors[key]  && <small className=\"form-text text-muted textIfFail \">{errors[key]}</small>}\r\n//             </div>\r\n//           </>\r\n//         )\r\n//     });\r\n//     return (\r\n//         <div>\r\n//             <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n//                  <div className=\"form-group row justify-content-across\">\r\n//                      {details}\r\n//                  </div>\r\n//                     <Button onClick={submitHandler}>Save </Button> \r\n//               </div>\r\n//         </div>      \r\n//     )\r\n// };\r\n\r\n// export default EditUsers;","import React, { Component } from 'react'\r\nimport Modal from \"../../../UI/Modal/Modal\";\r\nimport EditUsers from \"./EditUsers/EditUsers\";\r\nimport NewUser from \"./NewUser/NewUser\";\r\n\r\nexport default class CreateUser extends Component {\r\n\r\n    render() {\r\n        const createUser = (\r\n            <div>\r\n            <h3> {this.props.editMode ? \"Edit User\" : \"Create User\"}</h3>\r\n            {this.props.editMode ?\r\n             <EditUsers  \r\n                editMode = {this.props.editMode} \r\n                editObject = {this.props.editObject} \r\n                saveButtonHandler = {this.props.saveButtonHandler} \r\n                changeModeHandler = {this.props.modelClosed} \r\n             /> :\r\n             <NewUser saveButtonHandler = {this.props.saveUserButtonHandler} \r\n             changeModeHandler = {this.props.modelClosed} />\r\n            }\r\n            \r\n\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                 <Modal show={this.props.activePopup} modelClosed = {this.props.modelClosed}>\r\n                    {createUser}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DropDown extends Component {\r\n    render() {\r\n        let options = this.props.options.map(opt =>(\r\n            <option key = {opt} value = {opt}>{opt}</option>\r\n        ));\r\n        return (\r\n            <>\r\n              <select className = \"form-control\" {...this.props}>\r\n                  {options}\r\n              </select>  \r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport DropDown from \"../DropDown/DropDown\";\r\n\r\nconst Pagination = ({\r\n  postPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  currentPage,\r\n  pageSelect,\r\n}) => {\r\n\r\n  const pageNumbers = [];\r\n  const lastPage = Math.ceil(totalPosts / postPerPage);\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"form-inline float-right\">\r\n        <DropDown  onClick={(e) => pageSelect(e.target.value)} options = {[5,10,20] }></DropDown>\r\n        <Button\r\n          onClick={() => paginate(1)}\r\n          disabled={currentPage === 1 ? true : false}\r\n        >\r\n          First Page\r\n        </Button>\r\n        <Button\r\n          onClick={() => paginate(currentPage + 1)}\r\n          disabled={currentPage === lastPage ? true : false}\r\n        >\r\n          Next Page\r\n        </Button>\r\n        {pageNumbers.map((number) => (\r\n          <div key={number} className=\"mx-1\">\r\n            <Button onClick={() => paginate(number)}>{number}</Button>\r\n          </div>\r\n        ))}\r\n        <Button\r\n          onClick={() => paginate(currentPage - 1)}\r\n          disabled={currentPage === 1 ? true : false}\r\n        >\r\n          Prev. Page\r\n        </Button>\r\n        <Button\r\n          onClick={() => paginate(Math.ceil(totalPosts / postPerPage))}\r\n          disabled={currentPage === lastPage ? true : false}\r\n        >\r\n          Last Page\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport \"./Users.css\";\r\nimport UserList from \"./UserList/UserList\";\r\nimport CreateUser from \"./CreateUser/CreateUser\";\r\nimport Pagination from \"../../UI/Pagination/Pagination\";\r\n// import Sort from \"../../UI/Sort/Sort\";\r\nimport Button from \"../../UI/Button/Button\"\r\nimport ImportExportOutlinedIcon from '@material-ui/icons/ImportExportOutlined';\r\nimport * as loginAction from \"../../store/redux/LoginRedux/LoginRedux\";\r\n\r\nclass Users extends Component {\r\n    state = {\r\n        ediMode : false,\r\n        activePopup : false,\r\n        currentPage : 1,\r\n        postPerPage : 5,\r\n        sortType : \"asc\"\r\n    }\r\n    EditHandler = (username) =>{\r\n        this.setState({activePopup : true,editMode : true})\r\n        this.props.onEditHandler(username);\r\n    }\r\n    createHandler = () =>{\r\n        this.setState({activePopup : true,editMode : false})\r\n    }\r\n    modelClicked = () =>{\r\n        this.setState({activePopup : false,editMode : false})\r\n    }\r\n    paginate = (pageNumbers) =>{\r\n        this.setState({currentPage : pageNumbers})\r\n    }\r\n    pageSelect = (pagePerPost) =>{\r\n        this.setState({postPerPage : pagePerPost})\r\n    }\r\n    onSort = ()=>{\r\n        this.state.sortType === \"asc\" ? this.setState({sortType : \"desc\"}) : this.setState({sortType : \"asc\"})      \r\n    }\r\n    render() {\r\n        const indexOfLastPost = this.state.currentPage * this.state.postPerPage;\r\n        const indexOfFirstPost = indexOfLastPost -  this.state.postPerPage;\r\n        let reverseDetail = this.props.usersDetail.reverse();\r\n        const currentPosts = reverseDetail.slice(indexOfFirstPost,indexOfLastPost)\r\n        const sortedArray = currentPosts.sort((a,b)=>{\r\n            const isReversed = (this.state.sortType === \"asc\") ? 1 : -1;\r\n            return isReversed* a.firstName.localeCompare(b.firstName)\r\n        });\r\n        let users = (\r\n            sortedArray.map(details =>{\r\n                return(\r\n                    <UserList \r\n                    key = {details.username}\r\n                    username = {details.username}\r\n                    password = {details.password}\r\n                    firstName = {details.firstName}\r\n                    lastName= {details.lastName}\r\n                    role = {details.role}\r\n                    phonenumber = {details.phonenumber}\r\n                    editClick = {(username)=>this.EditHandler(username)}\r\n                    deleteClick = {this.props.onDeleteHandler}\r\n                />\r\n                )\r\n            })\r\n        )\r\n        return (\r\n            <div>\r\n            <div className=\"jumbotron text-center my-5\">\r\n            <div>\r\n                <Button className=\"my-4 float-right\" onClick={this.createHandler}>Create User</Button>\r\n            </div>\r\n            <div id=\"tableBox row\">             \r\n                    <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>User Name</th>\r\n                        <th>Password</th>\r\n                        <th>Role</th>\r\n                        <th><span>First Name</span> \r\n                        <Button className = \"btn-sm\" onClick ={()=>this.onSort()}><ImportExportOutlinedIcon fontSize=\"small\"/></Button>\r\n                       </th>\r\n                        <th>Last Name</th>\r\n                        <th>Mobile Number</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>   \r\n                </thead>\r\n                        {users}\r\n                    </table>\r\n                </div>\r\n                <div className=\"pageNumbers col-12\" id=\"pagination3\">\r\n                    <Pagination pageSelect = {this.pageSelect} paginate = {this.paginate} currentPage = {this.state.currentPage} postPerPage = {this.state.postPerPage} totalPosts={this.props.usersDetail.length}/>\r\n                </div>            \r\n            </div>\r\n            {this.state.activePopup && <CreateUser \r\n            editObject={this.props.editObject} \r\n            activePopup = {this.state.activePopup} \r\n            editMode = {this.state.editMode}\r\n            saveButtonHandler ={this.props.onSaveButtonHandler}\r\n            saveUserButtonHandler = {this.props.onSaveUserButtonHandler}\r\n            modelClosed = {this.modelClicked}    \r\n            />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        editObject : state.Login.editObject,\r\n        usersDetail : state.Login.usersDetail\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onEditHandler : (username)=>{dispatch(loginAction.editUserHandlerInit(username))},\r\n        onDeleteHandler : (username)=>{dispatch(loginAction.deleteUserHandlerInit(username))},\r\n        onSaveButtonHandler : (editUser) =>{dispatch(loginAction.saveUserHandlerInit(editUser))},\r\n        onSaveUserButtonHandler : (editUser) =>{dispatch(loginAction.createUserHandlerInit(editUser))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Users);","import React, { Component } from \"react\";\r\nimport \"./Profile.css\";\r\nimport \"../../App.css\";\r\nimport \"../../components/MyProfile/MyProfile\";\r\nimport MyProfile from \"../../components/MyProfile/MyProfile\";\r\nimport Users from \"../../components/Users/Users\";\r\nexport default class Profile extends Component {\r\n  state = {\r\n    toggleTab: 1,\r\n  };\r\n\r\n  toggleTabClick = (index) => {\r\n    this.setState({ toggleTab: index });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row verticalTab\" >\r\n          <div className=\"col-2 tabDivs\">\r\n            <div className=\"row\">\r\n              <button\r\n                className={\r\n                  this.state.toggleTab === 1\r\n                    ? \"tabss active-tabss btn\"\r\n                    : \"tabss btn\"\r\n                }\r\n                onClick={() => this.toggleTabClick(1)}\r\n              >\r\n                My Profile\r\n              </button>\r\n            </div>\r\n            {this.props.loggedInUser.role === \"admin\" && (\r\n              <div className=\"row\">\r\n                <button\r\n                  className={\r\n                    this.state.toggleTab === 2\r\n                      ? \"tabss active-tabss btn\"\r\n                      : \"tabss btn\"\r\n                  }\r\n                  onClick={() => this.toggleTabClick(2)}\r\n                >\r\n                  Users\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"col-10\">\r\n            <div className=\"row content-tabs\">\r\n              <div\r\n                className={\r\n                  this.state.toggleTab === 1\r\n                    ? \"contents  active-contents\"\r\n                    : \"contents\"\r\n                }\r\n              >\r\n                <div className =\"row headingColor justify-content-center\">\r\n                <h2 className=\"heading \">Logged In User Detail</h2>\r\n                </div>\r\n                <hr />\r\n                <MyProfile loggedInUser = {this.props.loggedInUser}/>\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.toggleTab === 2\r\n                    ? \"contents  active-contents\"\r\n                    : \"contents\"\r\n                }\r\n              >\r\n              <div className =\"row headingColor justify-content-center\">\r\n                <h2 className=\"heading \">Users Detail</h2>\r\n\r\n              </div>\r\n                <hr />\r\n                <Users />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport { Validators } from \"../../utilities/Validators\";\r\n\r\nexport default class CreatePost extends Component {\r\n  state = {\r\n    post: { value: \"\",valid: false, touched: false },\r\n    counter: 500,\r\n    date : \"\"\r\n  };\r\n  handleChange = (key) => (value, error) => {\r\n    if (this.state.counter !== 0) {\r\n      this.setState({ [key]: { value: value, valid: !error, touched: true } });\r\n      const counter = 500 - value.length;\r\n      this.setState({ counter: counter });\r\n    }\r\n  };\r\n  submitHandler = ()=>{\r\n    var today = new Date();\r\n\r\n    var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    \r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    \r\n    var dateTime = date+\" \"+time;\r\n\r\n    this.setState({date : dateTime},() => {\r\n        this.props.saveButtonHandler(this.state.post.value,this.state.date);\r\n        this.props.modelClosed();\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          show={this.props.activePopup}\r\n          modelClosed={this.props.modelClosed}\r\n        >\r\n          <div>\r\n            <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n              <h3 className=\"display-4\">Create Post</h3>\r\n              <div>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  placeholder=\"...Write Post\"\r\n                  value={this.state.post.value}\r\n                  onChange={this.handleChange(\"post\")}\r\n                  validators={[\r\n                    {\r\n                      check: Validators.required,\r\n                      message: \"Please Write Post\",\r\n                    },\r\n                  ]}\r\n                  touched={this.state.post.touched}\r\n                />\r\n                <p className=\"text-info\">\r\n                  {\" \"}\r\n                  You Have{\" \"}\r\n                  <span\r\n                    className={\r\n                      this.state.counter === 0 ? \"text-danger\" : \"text-info\"\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    {this.state.counter}\r\n                  </span>\r\n                  Character Left..\r\n                </p>\r\n              </div>\r\n              <Button onClick={this.submitHandler}>Save Post</Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export  const INITILIZE_POST_INIT = \"INITILIZE_POST_INIT\";\r\nexport const INITILIZE_POST_SUCCESS = \"INITILIZE_POST_SUCCESS\";\r\n\r\nexport const POST_CLICK_INIT = \"POST_CLICK_INIT\";\r\nexport const POST_CLICK_SUCCESS = \"POST_CLICK_SUCCESS\";\r\n\r\nexport const SAVE_POST_INIT = \"SAVE_POST_INIT\";\r\nexport const SAVE_POST_SUCCESS = \"SAVE_POST_SUCCESS\";\r\n\r\nexport const SHARE_POST_INIT = \"SHARE_POST_INIT\";\r\nexport const SHARE_POST_SUCCESS = \"SHARE_POST_SUCCESS\";\r\n\r\nexport const initializePostInit = ()=>{\r\n    return{\r\n        type : INITILIZE_POST_INIT\r\n    }\r\n}\r\nexport const initializePostSuccess = (userPost) =>{\r\n    return{\r\n        type : INITILIZE_POST_SUCCESS,\r\n        userPost:userPost\r\n    }\r\n}\r\n\r\nexport const postClickInit = (userPost) =>{\r\n    // console.log(userPost);\r\n    return{\r\n        type : POST_CLICK_INIT,\r\n        userPost : userPost\r\n    }\r\n}\r\nexport const postClickSuccess = (pendingPostArray,approvedPost,adminPost) =>{\r\n    return{\r\n        type : POST_CLICK_SUCCESS,\r\n        pendingPostArray : pendingPostArray,\r\n        approvedPost : approvedPost,\r\n        adminPost : adminPost\r\n    }\r\n}\r\n\r\nexport const shareHandlerInit = (selectedUser,selectedPost) =>{\r\n    console.log(selectedUser,selectedPost);\r\n    return{\r\n        type : SHARE_POST_INIT,\r\n        selectedUser : selectedUser,\r\n        selectedPost : selectedPost\r\n    }\r\n}\r\nexport const sharePostSuccess = (userPost) =>{\r\n    return{\r\n        type : SHARE_POST_SUCCESS,\r\n        userPost : userPost\r\n    }\r\n}\r\n\r\nexport const saveHandlerInit = (post,date) =>{\r\n    console.log(post,date);\r\n    return{\r\n        type:SAVE_POST_INIT,\r\n        post : post,\r\n        date : date      \r\n    }\r\n}\r\nexport const saveHandlerSuccess = (userPost) =>{\r\n    return{\r\n        type:SAVE_POST_SUCCESS,\r\n        userPost : userPost\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    userPost : [],\r\n    pendingPostArray : [],\r\n    approvedPost : [],\r\n    adminPost : []\r\n}\r\nconst Post = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case INITILIZE_POST_SUCCESS : \r\n        return{\r\n            ...state,\r\n            userPost : action.userPost\r\n        }\r\n\r\n        case POST_CLICK_SUCCESS : \r\n        return{\r\n            ...state,\r\n            pendingPostArray : action.pendingPostArray,\r\n            approvedPost : action.approvedPost,\r\n            adminPost : action.adminPost\r\n        }\r\n        case SAVE_POST_SUCCESS : \r\n         return{\r\n             ...state,\r\n             userPost : action.userPost\r\n        }\r\n        case SHARE_POST_SUCCESS :\r\n            return{\r\n                ...state,\r\n                userPost : action.userPost\r\n            }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\nexport default Post;","import React, { Component } from \"react\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nexport default class SharePost extends Component {\r\n    state = {\r\n       selecteduser : [],\r\n       shareButton : false  \r\n    }\r\n    checkBoxHandler = (event) =>{\r\n        let userName = [...this.state.selecteduser];\r\n        if(event.target.checked){\r\n            userName.push(event.target.value);\r\n        }\r\n        else{\r\n            const editObjIndex = userName.findIndex(user => user === event.target.value);\r\n            userName.splice(editObjIndex, 1);\r\n        }\r\n        if(userName !== null){\r\n          this.setState({shareButton : true});\r\n        }\r\n        this.setState({selecteduser : userName});\r\n    }\r\n    submitHandler = () =>{\r\n        this.props.saveButtonHandler(this.state.selecteduser,this.props.selectedPost);\r\n        this.props.modelClosed();\r\n    }\r\n  render() {\r\n    const users = this.props.usersDetail.map((user) => {\r\n      if (user.role !== \"admin\" && user.username !== this.props.selectedPost.username) {\r\n        return (\r\n          <div key={user.username} className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick = {(event)=>this.checkBoxHandler(event)}\r\n              value={user.username}\r\n            />\r\n            <label className=\"form-check-label\" >\r\n              {user.username}\r\n            </label>\r\n          </div>\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n    return (\r\n      <div>\r\n        <Modal\r\n          show={this.props.activePopup}\r\n          modelClosed={this.props.modelClosed}\r\n        >\r\n          <div>\r\n            <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n              <h4 className=\"display-4\">Share Post</h4>\r\n              <div>{users}</div>\r\n              <Button disabled={!this.state.shareButton} className = \"my-2\" onClick={this.submitHandler}>Share</Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ReadMore extends Component {\r\n  state = {\r\n    toggleSwitch: this.props.readMore,\r\n  };\r\n  toggleHandler = () => {\r\n    this.setState({ toggleSwitch: !this.state.toggleSwitch });\r\n  };\r\n  render() {\r\n    let textRead = this.state.toggleSwitch ? (\r\n      <p>{this.props.text.slice(0, 200)}</p>\r\n    ) : (\r\n      <p>{this.props.text}</p>\r\n    );\r\n    return (\r\n      <div>\r\n        {textRead}\r\n        <div className=\"row justify-content-end mr-4 \">\r\n          <p\r\n            className=\"nav-link text-info small\"\r\n            onClick={this.toggleHandler}\r\n          >\r\n            {this.state.toggleSwitch ? \"Read More\" : \"Read Less\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Pagination from \"../../UI/Pagination/Pagination\";\r\nimport CreatePost from \"../../components/CreatePost/CreatePost\";\r\nimport { connect } from \"react-redux\";\r\nimport * as postAction from \"../../store/redux/PostRedux/PostRedux\";\r\nimport SharePost from \"../SharePost/SharePost\";\r\nimport \"./AllPost.css\";\r\nimport ReadMore from \"../../UI/ReadMore/ReadMore\";\r\n\r\nclass AllPost extends Component {\r\n  state = {\r\n    activePopup: false,\r\n    currentPage: 1,\r\n    postPerPage: 5,\r\n    sortType: \"asc\",\r\n    checkBox: false,\r\n    checkBoxPopUp: false,\r\n    selectedPost : {},\r\n    readMore : true\r\n  };\r\n\r\n  createHandler = () => {\r\n    this.setState({ activePopup: true });\r\n  };\r\n  modelClicked = () => {\r\n    this.setState({ activePopup: false, checkBoxPopUp: false });\r\n  };\r\n\r\n  paginate = (pageNumbers) => {\r\n    this.setState({ currentPage: pageNumbers });\r\n  };\r\n  pageSelect = (pagePerPost) => {\r\n    this.setState({ postPerPage: pagePerPost });\r\n  };\r\n\r\n  onSort = () => {\r\n    this.state.sortType === \"asc\"\r\n      ? this.setState({ sortType: \"desc\" })\r\n      : this.setState({ sortType: \"asc\" });\r\n  };\r\n\r\n  checkBoxHandler = (event, post, username) => {\r\n    this.setState({ checkBox: true }, () => {\r\n      if (this.state.checkBox) {\r\n        let adminDecision = window.confirm(\r\n          \"Do you want to allow this post to be visible to other users?\"\r\n        );\r\n        if (adminDecision) {\r\n          this.setState({ checkBoxPopUp: true ,selectedPost :{post : post , username : username}});\r\n        } else {\r\n          this.setState({selectedPost :{post : post , username : username}},()=>{\r\n            this.props.onSharedHandler([],this.state.selectedPost)\r\n          });\r\n        }\r\n      }\r\n    });\r\n    console.log(event.target, post, username);\r\n    console.log(\"clicked\");\r\n  };\r\n\r\n  // readMoreHandler = (post) =>{     \r\n  //   if(this.state.read){\r\n  //     this.setState({read : false});\r\n  //     return post;\r\n  //   }\r\n  //   else{      \r\n  //     this.setState({read : true});\r\n  //     console.log(post.substring(0, 200) + \".....\")\r\n  //     return post.substring(0, 200) + \".....\";\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const indexOfLastPost = this.state.currentPage * this.state.postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - this.state.postPerPage;\r\n    const currentPosts = this.props.approvedPost.slice(\r\n      indexOfFirstPost,\r\n      indexOfLastPost\r\n    );\r\n    const sortedArray = currentPosts.sort((a, b) => {\r\n      const isReversed = this.state.sortType === \"asc\" ? 1 : -1;\r\n      return isReversed * a.date.localeCompare(b.date);\r\n    });\r\n    // let textRead;\r\n    const approvedPost = sortedArray.map((post) => {\r\n\r\n      return (\r\n        <div className=\"card m-3 mx-auto cardBox\" style={{ width: '45rem' }} key={post.date}>\r\n          <div className = \"postBox\">\r\n          <ReadMore text = {post.post} readMore = {this.state.readMore}/>\r\n          </div>\r\n          <div className=\"row justify-content-between\">\r\n          {(this.props.loggedInUser.role === \"admin\" &&  this.props.tabContent === \"pendingPost\") && \r\n          <div className = \"col-2\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={this.state.checkBox}\r\n              onClick={(event) =>\r\n                this.checkBoxHandler(event, post.post, post.username)\r\n              }\r\n            />\r\n          </div>}\r\n             <div className = \"col-5\">\r\n             <small>{post.username}</small>\r\n             </div>\r\n             <div className = \"col-5\">\r\n             <small>{post.date}</small>\r\n             </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.props.loggedInUser.role !== \"admin\" &&\r\n          (this.props.tabContent === \"allPost\" ||\r\n            this.props.tabContent === \"pendingPost\") ? (\r\n            <Button className=\"float-right\" onClick={this.createHandler}>\r\n              Create Post\r\n            </Button>\r\n          ) : (\r\n            this.props.tabContent === \"promotionalPost\" && (\r\n              <Button className=\"float-right\" onClick={this.createHandler}>\r\n                Create Post\r\n              </Button>\r\n            )\r\n          )}\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button className=\"btn-sm float-right\" onClick={() => this.onSort()}>\r\n            Sort Date\r\n          </Button>\r\n        </div>\r\n        <div className=\"\">\r\n        {approvedPost}\r\n        </div>\r\n        <Pagination\r\n          pageSelect={this.pageSelect}\r\n          paginate={this.paginate}\r\n          currentPage={this.state.currentPage}\r\n          postPerPage={this.state.postPerPage}\r\n          totalPosts={this.props.approvedPost.length}\r\n        />\r\n        {this.state.activePopup && (\r\n          <CreatePost\r\n            activePopup={this.state.activePopup}\r\n            saveButtonHandler={this.props.onSaveButtonHandler}\r\n            modelClosed={this.modelClicked}\r\n          />\r\n        )}\r\n        {this.state.checkBoxPopUp && (\r\n          <SharePost\r\n            loggedInUser={this.props.loggedInUser}\r\n            selectedPost = {this.state.selectedPost}\r\n            usersDetail={this.props.usersDetail}\r\n            activePopup={this.state.checkBoxPopUp}\r\n            modelClosed={this.modelClicked}\r\n            saveButtonHandler={this.props.onSharedHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userPost: state.Post.userPost,\r\n    usersDetail: state.Login.usersDetail,\r\n    loggedInUser: state.Login.loggedInUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSaveButtonHandler: (post, date) => {\r\n      dispatch(postAction.saveHandlerInit(post, date))\r\n    },\r\n    onSharedHandler : (selectedUser,selectedPost) => {\r\n      dispatch(postAction.shareHandlerInit(selectedUser,selectedPost))\r\n    },\r\n\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllPost);\r\n","import React, { Component } from \"react\";\r\nimport \"./Post.css\";\r\nimport AllPost from \"../../components/AllPost/AllPost\";\r\nimport \"../../App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as postAction from \"../../store/redux/PostRedux/PostRedux\";\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    toggleTab: 2,\r\n  };\r\n\r\n  toggleTabClick = (index) => {\r\n    this.setState({ toggleTab: index });\r\n    this.props.onPost(this.props.userPost);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onInitlizer();\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.userPost !== prevProps.userPost){\r\n      this.props.onPost(this.props.userPost);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"tabDiv\">\r\n        <div className=\"bloc-tabs\">\r\n          <button\r\n            className={this.state.toggleTab === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n            onClick={() => this.toggleTabClick(1)}\r\n          >\r\n            Pending Post\r\n          </button>\r\n          <button\r\n            className={this.state.toggleTab === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n            onClick={() => this.toggleTabClick(2)}\r\n          >\r\n            All Post\r\n          </button>\r\n          {this.props.loggedInUser.role === \"admin\" && (\r\n            <button\r\n              className={\r\n                this.state.toggleTab === 3 ? \"tabs active-tabs\" : \"tabs\"\r\n              }\r\n              onClick={() => this.toggleTabClick(3)}\r\n            >\r\n              Promotional Post\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"content-tabs\">\r\n          <div\r\n            className={\r\n              this.state.toggleTab === 1 ? \"content  active-content\" : \"content\"\r\n            }\r\n          >\r\n            <div className=\"container\">\r\n              <h4 className=\"display-3 text-center heading\">Pending Post</h4>\r\n              <hr />\r\n              <AllPost\r\n                loggedInUser={this.props.loggedInUser}\r\n                approvedPost={this.props.pendingPostArray}\r\n                tabContent = \"pendingPost\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              this.state.toggleTab === 2 ? \"content  active-content\" : \"content\"\r\n            }\r\n          >\r\n            <div className=\"container\">\r\n              <h4 className=\"display-3 text-center heading\">All Post</h4>\r\n              <hr />\r\n              <AllPost\r\n                loggedInUser={this.props.loggedInUser}\r\n                approvedPost={this.props.approvedPost}\r\n                tabContent = \"allPost\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              this.state.toggleTab === 3 ? \"content  active-content\" : \"content\"\r\n            }\r\n          >\r\n            <div className=\"container\">\r\n              <h4 className=\"display-3 text-center heading\">Promotional Post</h4>\r\n              <hr />\r\n              <AllPost\r\n                loggedInUser={this.props.loggedInUser}\r\n                approvedPost={this.props.adminPost}\r\n                tabContent = \"promotionalPost\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userPost: state.Post.userPost,\r\n    pendingPostArray: state.Post.pendingPostArray,\r\n    approvedPost: state.Post.approvedPost,\r\n    adminPost: state.Post.adminPost,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onInitlizer: () => {\r\n      dispatch(postAction.initializePostInit());\r\n    },\r\n    onPost: (userPost) => {\r\n      dispatch(postAction.postClickInit(userPost));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\r\n","import React from 'react'\r\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\r\nimport \"./Spinner.css\";\r\nconst Spinner = ({loading}) => {\r\n    return (\r\n        <div className = \"Spinner\">\r\n             <ClimbingBoxLoader color={'#2caabe'} loading={loading} size={20} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport Navbar from \"../../UI/Navbar/Navbar\";\r\nimport Profile from \"../../container/Profile/Profile\";\r\nimport Post from \"../../container/Post/Post\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\n class BlogPost extends Component {\r\n  state={\r\n    openProfile : false,\r\n    openPost : true,\r\n    loading : false\r\n  }\r\n  componentDidMount(){\r\n    this.setState({loading : true});\r\n    setTimeout(()=>{\r\n      this.setState({loading : false});\r\n    },3000)\r\n  }\r\n  componentDidUpdate(){\r\n    if(this.state.openPost !== this.props.openPost || this.state.openProfile !== this.props.openProfile){\r\n\r\n      this.setState({openProfile : this.props.openProfile,openPost : this.props.openPost},()=>{\r\n        this.setState({loading : true});\r\n        setTimeout(()=>{\r\n          this.setState({loading : false});\r\n        },3000)\r\n  \r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n       <Navbar loggedInUser ={this.props.loggedInUser} logoutHandler ={this.props.logoutHandler} profileHandler ={this.props.profileHandler} postHandler = {this.props.postHandler}/>\r\n        {this.state.openPost ? \r\n        this.state.loading ? <Spinner \r\n          loading={this.state.loading} \r\n          /> : \r\n          <Post loggedInUser ={this.props.loggedInUser}/>\r\n        :\r\n        this.state.openProfile  && this.state.loading ? <Spinner \r\n          loading={this.state.loading} \r\n          /> :\r\n          <Profile loggedInUser ={this.props.loggedInUser}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogPost;","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport Login from \"./components/Login/Login\";\nimport * as loginAction from \"./store/redux/LoginRedux/LoginRedux\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport BlogPost from './components/BlogPost/BlogPost';\n\n\nclass App extends Component {\n  state = {\n    isSubmit : false\n  }\n  componentDidMount(){\n    this.props.onInitlizeApp();\n  }\n  componentDidUpdate(){\n    if(this.state.isSubmit !== this.props.isAuth){\n      this.setState({isSubmit : this.props.isAuth})\n    }\n   \n  }\n  confirmLogoutHandler = () =>{\n    if (window.confirm(\"Do you want to Signout?\")) {\n     this.props.onLogoutHandler();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.isSubmit ? \n          <Login \n          submitButtonHandler = {this.props.onSubmitHandler} \n          isAuthenticate = {this.props.isAuth}\n          /> \n          : \n          <BlogPost \n          loggedInUser = {this.props.loggedInUser} \n          logoutHandler = {this.confirmLogoutHandler}\n          profileHandler = {this.props.onProfileHandler}\n          openProfile = {this.props.openProfile}\n          postHandler = {this.props.onPostHandler}\n          openPost = {this.props.openPost}\n          /> }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state =>{\n  return{\n    isAuth : state.Login.isAuth,\n    loggedInUser : state.Login.loggedInUser,\n    openProfile : state.Login.openProfile,\n    openPost : state.Login.openPost\n  }\n}\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onInitlizeApp : ()=> dispatch(loginAction.initlizerAppInit()),\n    onSubmitHandler : (values,valid) => dispatch(loginAction.submitHandlerInit(values,valid)),\n    onLogoutHandler : ()=>dispatch(loginAction.logoutHandlerInit()),\n    onProfileHandler : () =>dispatch(loginAction.profileHandlerInit()),\n    onPostHandler : () =>dispatch(loginAction.postHandlerInit())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport Login from \"./LoginRedux/LoginRedux\";\r\nimport Post from \"./PostRedux/PostRedux\";\r\n\r\nexport default combineReducers({\r\n    Login,Post\r\n})\r\n","import * as loginAction from \"../../redux/LoginRedux/LoginRedux\";\r\nimport { put } from \"redux-saga/effects\";\r\nexport function* initilizeHandlerSaga(){\r\n    const localValue =  JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    localStorage.removeItem('loginBlogApp');\r\n    const loginBlogApp = {\r\n        isAuth : false,\r\n        loggedInUser : {},\r\n        openProfile : false,\r\n        openPost : true,\r\n        usersDetail : [],\r\n        editObject : {},\r\n        userPost : []\r\n    }\r\n\r\n    if (localValue === null) {\r\n        const userArrayDetail = [];\r\n        const userDetail = {\r\n            username: \"vivek@123\",\r\n            password: \"Vivek@123\",\r\n            role: \"admin\",\r\n            firstName: \"Vivek\",\r\n            lastName: \"Bindal\",\r\n            phonenumber: 8888269609,\r\n        }\r\n        userArrayDetail.push(userDetail);\r\n       yield localStorage.setItem(\"usersDetail\", JSON.stringify(userArrayDetail));\r\n       loginBlogApp.usersDetail = userArrayDetail;\r\n    }    \r\n    else{\r\n        loginBlogApp.usersDetail = localValue; \r\n    }\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlogApp));\r\n}\r\nexport function* submitHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for(let users in localValue){\r\n        if(localValue[users].username === action.username && localValue[users].password === action.password){\r\n            loginBlog.isAuth = action.isAuth;\r\n            loginBlog.loggedInUser = localValue[users];\r\n            loginBlog.usersDetail = [...localValue];\r\n            yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n            yield put(loginAction.submitHandlerSuccess(loginBlog));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function* logoutHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.isAuth = false;\r\n    updateValue.loggedInUser = {};\r\n    updateValue.openProfile = false;\r\n    updateValue.openPost = true;\r\n    updateValue.editObject = {};\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.logoutHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* profileHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.openProfile = true;\r\n    updateValue.openPost = false;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.profileHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* postHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.openProfile = false;\r\n    updateValue.openPost = true;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.postHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* saveHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for(let users in localValue){\r\n        if(localValue[users].username === action.values.username && localValue[users].role === action.values.role){\r\n            localValue[users] = action.values;\r\n            loginBlog.loggedInUser = localValue[users];\r\n            loginBlog.usersDetail = [...localValue];\r\n        }        \r\n        yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n        yield put(loginAction.saveHandlerSuccess(loginBlog));\r\n    }\r\n}\r\nexport function* editUserHandlerSaga(action){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const editObject = loginBlog.usersDetail.find(user => user.username === action.username);\r\n        loginBlog.editObject = editObject;\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n        yield put(loginAction.editUserHandlerSuccess(loginBlog));    \r\n}\r\n\r\nexport function* deleteUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const editObjIndex = loginBlog.usersDetail.findIndex(user => user.username === action.username);\r\n    loginBlog.usersDetail.splice(editObjIndex, 1);\r\n    localValue = loginBlog.usersDetail;\r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.deleteUserHandlerSuccess(loginBlog));\r\n}\r\nexport function* saveUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n        const editObjIndex = loginBlog.usersDetail.findIndex(user => user.username === loginBlog.editObject.username);\r\n        if(loginBlog.editObject.username === loginBlog.loggedInUser.username){\r\n            loginBlog.loggedInUser = action.editUser;\r\n        }\r\n        loginBlog.usersDetail[editObjIndex] = action.editUser;\r\n        localValue = loginBlog.usersDetail;\r\n        loginBlog.editObject = {}    \r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.saveUserHandlerSuccess(loginBlog));\r\n}\r\nexport function* saveCreateUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    loginBlog.usersDetail.push(action.editUser);\r\n    localValue.push(action.editUser);\r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.createUserHandlerSuccess(loginBlog));\r\n}","import * as postAction from \"../../redux/PostRedux/PostRedux\";\r\nimport { put } from \"redux-saga/effects\";\r\n\r\nexport function* initilizeSage() {\r\n    const userPosts = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    if (userPosts === null) {\r\n        let arrayPost = [];\r\n        yield localStorage.setItem(\"userPost\", JSON.stringify(arrayPost));\r\n    } else {\r\n        localValue.userPost = userPosts;\r\n        yield localStorage.setItem(\"userPost\", JSON.stringify(userPosts));\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(localValue));\r\n        yield put(postAction.initializePostSuccess(userPosts));\r\n        yield put(postAction.postClickInit(userPosts));\r\n    }\r\n}\r\n\r\nexport function* savePostHandlerSaga(action) {\r\n    const userPosts = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = { ...localValue };\r\n    let approvedPost = false;\r\n    let sharePost = [];\r\n    if (updateValue.loggedInUser.role === \"admin\") {\r\n        approvedPost = true;\r\n    }\r\n    for(let user in updateValue.usersDetail){\r\n        if(updateValue.usersDetail[user].role === \"user\"){\r\n            sharePost.push(updateValue.usersDetail[user].username);           \r\n        }\r\n    }\r\n    const postObject = {\r\n        approved: approvedPost,\r\n        sharePost:sharePost,\r\n        date: action.date,\r\n        post: action.post,\r\n        username: updateValue.loggedInUser.username,\r\n    };\r\n\r\n    userPosts.push(postObject);\r\n    yield localStorage.setItem(\"userPost\", JSON.stringify(userPosts));\r\n\r\n    updateValue.userPost = userPosts;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(postAction.saveHandlerSuccess(userPosts));\r\n}\r\n\r\nexport function* allPostClickSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = { ...localValue };\r\n    const pendingPostArray = [];\r\n    const approvedPost = [];\r\n    const adminPost = [];\r\n    // let arrayForPage=[];  \r\n    if (action.userPost !== null) {\r\n        let reverseArray = action.userPost.reverse();\r\n        reverseArray.forEach(e => {\r\n            if (e.username === updateValue.loggedInUser.username || updateValue.loggedInUser.role === \"admin\") {\r\n                // Condition For Pending Post\r\n                if (e.approved === false) {\r\n                    pendingPostArray.push(e);\r\n                    localStorage.setItem(\"postForPending\", JSON.stringify(pendingPostArray));\r\n                }\r\n\r\n                // Condition For all post\r\n                for (let i = 0; i < updateValue.usersDetail.length; i++) {\r\n                    if (e.approved === true && updateValue.usersDetail[i].username === e.username && updateValue.usersDetail[i].role !== \"admin\") {\r\n                        approvedPost.push(e);\r\n                        localStorage.setItem(\"postForallPost\", JSON.stringify(approvedPost));\r\n                    }\r\n                }\r\n\r\n                // Condition For Promotional Post\r\n                for (let i = 0; i < updateValue.usersDetail.length; i++) {\r\n                    if (e.approved === true && updateValue.usersDetail[i].username === e.username && updateValue.usersDetail[i].role === \"admin\") {\r\n                        adminPost.push(e);\r\n                        localStorage.setItem(\"postByAdmin\", JSON.stringify(adminPost));\r\n                    }\r\n                }\r\n\r\n            }\r\n            else if (e.sharePost !== \"\") {\r\n                for (let i = 0; i < e.sharePost.length; i++) {\r\n                    if (e.sharePost[i] === updateValue.loggedInUser.username) {\r\n                        for (let j = 0; j < updateValue.usersDetail.length; j++) {\r\n                            if (updateValue.usersDetail[j].username === e.sharePost[i] && e.approved === true) {\r\n                                approvedPost.push(e);\r\n                                localStorage.setItem(\"postForallPost\", JSON.stringify(approvedPost));\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    yield put(postAction.postClickSuccess(pendingPostArray, approvedPost, adminPost));\r\n}\r\n\r\nexport function* sharePostHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localObject = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    let updateValue = [...localValue];\r\n\r\n    const editObjectIndex = updateValue.findIndex(user => (user.username === action.selectedPost.username && user.post === action.selectedPost.post));\r\n    updateValue[editObjectIndex].approved = true;\r\n\r\n        \r\n        updateValue[editObjectIndex].sharePost = action.selectedUser;\r\n    \r\n    localObject.userPost = updateValue;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(localObject));\r\n    yield localStorage.setItem(\"userPost\", JSON.stringify(updateValue));\r\n    yield put(postAction.sharePostSuccess(updateValue));\r\n}","import { takeLatest } from \"@redux-saga/core/effects\";\r\nimport * as loginAction from \"../redux/LoginRedux/LoginRedux\";\r\nimport * as postAction from \"../redux/PostRedux/PostRedux\";\r\n\r\nimport {initilizeHandlerSaga,submitHandlerSaga,logoutHandlerSaga,profileHandlerSaga,\r\n    postHandlerSaga,saveHandlerSaga,editUserHandlerSaga,\r\n    deleteUserHandlerSaga,saveUserHandlerSaga,saveCreateUserHandlerSaga} from \"./LoginSaga/LoginSaga\";\r\nimport {initilizeSage,savePostHandlerSaga,allPostClickSaga,sharePostHandlerSaga} from \"./PostSaga/PostSaga\";\r\n\r\nexport function* watch(){\r\n    // Login Action\r\n    yield takeLatest(loginAction.INITLIZE_APP,initilizeHandlerSaga);\r\n    yield takeLatest(loginAction.SIGNUP_SUBMIT_INIT,submitHandlerSaga)\r\n    yield takeLatest(loginAction.LOGOUT_SESSION_INIT,logoutHandlerSaga)\r\n    yield takeLatest(loginAction.PROFILE_HANDLER_INIT,profileHandlerSaga)\r\n    yield takeLatest(loginAction.POST_HANDLER_INIT,postHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_INIT,saveHandlerSaga)\r\n    yield takeLatest(loginAction.EDIT_USER_INIT,editUserHandlerSaga)\r\n    yield takeLatest(loginAction.DELETE_USER_INIT,deleteUserHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_EDIT_USER_INIT,saveUserHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_CREATE_USER_INIT,saveCreateUserHandlerSaga)\r\n\r\n    // Post Action\r\n    yield takeLatest(postAction.INITILIZE_POST_INIT,initilizeSage)\r\n    yield takeLatest(postAction.SAVE_POST_INIT,savePostHandlerSaga)\r\n    yield takeLatest(postAction.POST_CLICK_INIT,allPostClickSaga)\r\n    yield takeLatest(postAction.SHARE_POST_INIT,sharePostHandlerSaga)\r\n\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport rootReducer from \"./store/redux/root_redux\";\nimport {watch} from \"./store/saga/root_saga\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watch);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}