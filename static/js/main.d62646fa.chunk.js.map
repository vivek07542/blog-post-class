{"version":3,"sources":["UI/Button/Button.js","utilities/Validators.js","UI/Input/Input.js","components/Login/Login.js","store/redux/LoginRedux/LoginRedux.js","UI/Navbar/Navbar.js","components/MyProfile/ProfileDetail/ProfileDetail.js","components/MyProfile/EditProfile/EditProfile.js","components/MyProfile/MyProfile.js","components/Users/UserList/UserList.js","UI/BackDrop/BackDrop.js","UI/Modal/Modal.js","components/Users/CreateUser/EditUsers/EditUsers.js","components/Users/CreateUser/NewUser/NewUser.js","components/Users/CreateUser/CreateUser.js","UI/DropDown/DropDown.js","UI/Pagination/Pagination.js","components/Users/Users.js","container/Profile/Profile.js","components/CreatePost/CreatePost.js","store/redux/PostRedux/PostRedux.js","components/SharePost/SharePost.js","UI/ReadMore/ReadMore.js","components/AllPost/AllPost.js","container/Post/Post.js","UI/Spinner/Spinner.js","components/BlogPost/BlogPost.js","App.js","reportWebVitals.js","store/redux/root_redux.js","store/saga/LoginSaga/LoginSaga.js","store/saga/PostSaga/PostSaga.js","store/saga/root_saga.js","index.js"],"names":["Button","props","className","allProps","classNameProp","push","assignedClass","join","children","regex","email","RegExp","number","Validators","value","message","test","error","localValue","JSON","parse","localStorage","getItem","users","username","length","toString","trim","Input","label","placeholder","validators","type","onChange","data","touched","useState","setError","handleChange","event","target","i","check","validateInput","inputClasses","htmlFor","map","e","key","name","defaultProps","Login","state","form","valid","password","submitHandler","preventDefault","setState","isValid","every","v","submitButtonHandler","updatedValue","this","isAuthenticate","onSubmit","required","Component","INITLIZE_APP","SIGNUP_SUBMIT_INIT","SIGNUP_SUBMIT_SUCCESS","LOGOUT_SESSION_INIT","LOGOUT_SESSION_SUCCESS","PROFILE_HANDLER_INIT","PROFILE_HANDLER_SUCCESS","POST_HANDLER_INIT","POST_HANDLER_SUCCESS","SAVE_INIT","SAVE_SUCCESS","EDIT_USER_INIT","EDIT_USER_SUCCESS","DELETE_USER_INIT","DELETE_USER_SUCCESS","SAVE_EDIT_USER_INIT","SAVE_EDIT_USER_SUCCESS","SAVE_CREATE_USER_INIT","SAVE_CREATE_USER_SUCCESS","initialState","loggedInUser","isAuth","openProfile","openPost","usersDetail","editObject","action","Navbar","id","onClick","postHandler","data-toggle","firstName","lastName","aria-labelledby","profileHandler","logoutHandler","ProfileDetail","obj","details","Object","keys","editProfileHandler","EditProfile","role","phonenumber","values","saveButtonHandler","changeModeHandler","phoneNumber","MyProfile","editMode","editHandler","onSaveHandler","connect","dispatch","console","log","loginAction","UserList","editClick","deleteHandler","deleteClick","eachChild","Backdrop","show","clicked","Modal","nextProps","nextState","modelClosed","style","transform","opacity","EditUser","NewUser","userCheck","CreateUser","createUser","EditUsers","saveUserButtonHandler","activePopup","DropDown","options","opt","Pagination","postPerPage","totalPosts","paginate","currentPage","pageSelect","pageNumbers","lastPage","Math","ceil","disabled","Users","ediMode","sortType","EditHandler","onEditHandler","createHandler","modelClicked","pagePerPost","onSort","indexOfLastPost","indexOfFirstPost","reverse","slice","sort","a","b","localeCompare","onDeleteHandler","fontSize","onSaveButtonHandler","onSaveUserButtonHandler","editUser","Profile","toggleTab","toggleTabClick","index","CreatePost","post","counter","date","today","Date","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","INITILIZE_POST_INIT","INITILIZE_POST_SUCCESS","POST_CLICK_INIT","POST_CLICK_SUCCESS","SAVE_POST_INIT","SAVE_POST_SUCCESS","SHARE_POST_INIT","SHARE_POST_SUCCESS","postClickInit","userPost","postClickSuccess","pendingPostArray","approvedPost","adminPost","Post","SharePost","selecteduser","shareButton","checkBoxHandler","userName","checked","editObjIndex","findIndex","user","splice","selectedPost","ReadMore","toggleSwitch","readMore","toggleHandler","textRead","text","AllPost","checkBox","checkBoxPopUp","window","confirm","onSharedHandler","width","tabContent","postAction","selectedUser","onPost","onInitlizer","prevProps","Spinner","loading","color","size","BlogPost","setTimeout","App","isSubmit","confirmLogoutHandler","onLogoutHandler","onInitlizeApp","onProfileHandler","onPostHandler","onSubmitHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","initilizeHandlerSaga","submitHandlerSaga","logoutHandlerSaga","profileHandlerSaga","postHandlerSaga","saveHandlerSaga","editUserHandlerSaga","deleteUserHandlerSaga","saveUserHandlerSaga","saveCreateUserHandlerSaga","removeItem","loginBlogApp","userArrayDetail","setItem","stringify","loginBlog","put","updateValue","find","initilizeSage","savePostHandlerSaga","allPostClickSaga","sharePostHandlerSaga","userPosts","arrayPost","sharePost","postObject","approved","forEach","j","localObject","editObjectIndex","watch","takeLatest","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d62646fa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => {\r\n  const { className, ...allProps } = { ...props };\r\n  \r\n  let classNameProp = [\"btn btn-outline-info\"];\r\n  if (className) {\r\n    classNameProp.push(className);\r\n  }\r\n  let assignedClass = classNameProp.join(\" \");\r\n  return (  \r\n      <button className={assignedClass} {...allProps}>\r\n        {props.children}\r\n      </button>   \r\n  );\r\n};\r\nButton.propTypes = {\r\n  className : PropTypes.string,\r\n  onClick : PropTypes.func  \r\n}\r\nexport default Button;","const regex = {\r\n  email: new RegExp(\r\n    \"^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@]+)*)|(.+))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$\"\r\n  ),\r\n  number: new RegExp(\"^[0-9]+$\"),\r\n};\r\n\r\nexport class Validators {\r\n  static email(value, message) {\r\n    if (value) {\r\n      const result = regex.email.test(value);\r\n      if (!result) return { error: true, message };\r\n    }\r\n  }\r\n  static userCheck(value, message) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    for (let users in localValue) {\r\n      if (localValue[users].username === value) {\r\n        return { error: true, message };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  static phoneNumber(value, message) {\r\n    const length = value ? value.toString().length : 0;\r\n    if (length > 10 || length < 9) {\r\n      return { error: true, message };\r\n    }\r\n    return false;\r\n  }\r\n  static required(value, message) {\r\n    if (!value || !value.toString().trim().length) {\r\n      return { error: true, message };\r\n    }\r\n    return false;\r\n  }\r\n  static number(value, message) {\r\n    const length = value ? value.toString().length : 0;\r\n    if (length > 0) {\r\n      const result = regex.number.test(value);\r\n      if (!result) {\r\n        return { error: true, message };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\nexport const validateInput = (validators, value) => {\r\n  if (validators && validators.length) {\r\n    for (let i = 0; i < validators.length; i++) {\r\n      const error = validators[i].check(value, validators[i].message);\r\n      if (error) {\r\n        return error;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {validateInput} from \"../../utilities/Validators\";\r\n\r\nconst Input = ({value, label, placeholder, validators, type, onChange,data,touched}) => {\r\n    const [error, setError] = useState(false);\r\n    \r\n    const handleChange = (event) => {\r\n        const {value} = event.target;\r\n        setError(validateInput(validators,value));\r\n        onChange(value,error);\r\n    };\r\n\r\n    const inputClasses = [\"form-control\"];\r\n    if(touched ){\r\n        error ? inputClasses.push(\"is-invalid\") : inputClasses.push(\"is-valid\")\r\n    }\r\n    \r\n    return (\r\n        <div className=\"form-group\">\r\n            {label && <label htmlFor=\"app-input-field\">{label}</label>}\r\n            {type === 'textarea' ? \r\n                <textarea\r\n                    type ={type}\r\n                    className= {inputClasses.join(' ')}\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                />\r\n             : type === \"select\" ? \r\n                <select\r\n                   type={type}\r\n                    value={value}\r\n                    className={inputClasses.join(' ')}\r\n                    placeholder={placeholder}\r\n                    onChange={handleChange}>\r\n                    {data.map((e, key) => {\r\n                        return <option key={key} value={e.name}>{e.name}</option>;\r\n                    })}\r\n            </select> : (\r\n                <input\r\n                    type={type}\r\n                    value={value}\r\n                    className={inputClasses.join(' ')}\r\n                    placeholder={placeholder}\r\n                    onChange={handleChange}\r\n                /> \r\n            )}\r\n            {error && <span className='text-danger'>{error.message}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nInput.propTypes = {\r\n    value:  PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n      ]),\r\n    label: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    validators: PropTypes.array,\r\n    type: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    data : PropTypes.array\r\n};\r\n\r\nInput.defaultProps = {\r\n  value: '',\r\n  label: '',\r\n  placeholder: '',\r\n  type: 'text',\r\n  validators: [],\r\n  data : []\r\n};\r\n\r\nexport default Input;","import Button from \"../../UI/Button/Button\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport { Validators } from \"../../utilities/Validators\";\r\nimport \"./Login.css\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    form : {\r\n      username: {value : \"\" , valid : false,touched : false},\r\n      password: {value : \"\" , valid : false,touched : false}\r\n    },\r\n    touched: false,\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ touched: true });\r\n    let valid = [];\r\n    for(let key in this.state.form){   \r\n      this.state.form[key].value !== \"\" && this.state.form[key].valid === true ? valid.push(true) : valid.push(false);  \r\n    }\r\n    const isValid = valid.every(v => v === true)    \r\n    isValid &&  this.props.submitButtonHandler(this.state.form, isValid);\r\n  };\r\n\r\n  handleChange = (key) => (value,error) => {\r\n    let updatedValue = {...this.state.form}\r\n    updatedValue[key]= {value :value,valid :!error,touched : true}\r\n    this.setState({form : updatedValue});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <div className=\"container my-5\">\r\n          <h1 className=\"display-4 heading\">Blog post Login</h1>\r\n          <div className=\"jumbotron\">\r\n            {!this.props.isAuthenticate && this.state.touched && (\r\n              <small className=\"form-text text-muted textIfFail\">\r\n                Please get Approval From Admin Or Check UserName & Password.\r\n              </small>\r\n            )}\r\n            <form className=\"form\" onSubmit={this.submitHandler}>\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  type=\"text\"\r\n                  label=\"User Name\"\r\n                  placeholder=\"Enter Your User Name\"\r\n                  value={this.state.form.username.value}\r\n                  onChange={this.handleChange(\"username\")}\r\n                  validators={[\r\n                    {\r\n                      check: Validators.required,\r\n                      message: \"Field Is Required\",\r\n                    },\r\n                  ]}\r\n                  touched = {this.state.form.username.touched}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Input\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  placeholder=\"Enter Your Password\"\r\n                  value={this.state.form.password.value}\r\n                  onChange={this.handleChange(\"password\")}\r\n                  validators={[\r\n                    {\r\n                      check: Validators.required,\r\n                      message: \"Field Is Required\",\r\n                    },\r\n                  ]}\r\n                  touched = {this.state.form.password.touched}\r\n                />\r\n              </div>\r\n              <Button>SignUp</Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;","export const INITLIZE_APP = \"INITLIZE_APP\";\r\nexport const SIGNUP_SUBMIT_INIT = \"SIGNUP_SUBMIT_INIT\";\r\nexport const SIGNUP_SUBMIT_SUCCESS = \"SIGNUP_SUBMIT_SUCCESS\";\r\nexport const LOGOUT_SESSION_INIT = \"LOGOUT_SESSION_INIT\";\r\nexport const LOGOUT_SESSION_SUCCESS = \"LOGOUT_SESSION_SUCCESS\";\r\nexport const PROFILE_HANDLER_INIT = \"PROFILE_HANDLER_INIT\";\r\nexport const PROFILE_HANDLER_SUCCESS= \"PROFILE_HANDLER_SUCCESS\";\r\nexport const POST_HANDLER_INIT = \"POST_HANDLER_INIT\";\r\nexport const POST_HANDLER_SUCCESS= \"POST_HANDLER_SUCCESS\";\r\nexport const SAVE_INIT = \"SAVE_INIT\";\r\nexport const SAVE_SUCCESS = \"SAVE_SUCCESS\";\r\nexport const EDIT_USER_INIT = \"EDIT_USER_INIT\";\r\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\r\nexport const DELETE_USER_INIT = \"DELETE_USER_INIT\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const SAVE_EDIT_USER_INIT = \"SAVE_EDIT_USER_INIT\";\r\nexport const SAVE_EDIT_USER_SUCCESS = \"SAVE_EDIT_USER_SUCCESS\";\r\nexport const SAVE_CREATE_USER_INIT = \"SAVE_CREATE_USER_INIT\";\r\nexport const SAVE_CREATE_USER_SUCCESS = \"SAVE_CREATE_USER_SUCCESS\";\r\n\r\nexport const initlizerAppInit = () =>{\r\n    return{\r\n        type : INITLIZE_APP\r\n    }\r\n}\r\nexport const submitHandlerInit = (values,valid) =>{ \r\n    return{\r\n        type : SIGNUP_SUBMIT_INIT,\r\n        username : values.username.value,\r\n        password : values.password.value,\r\n        isAuth : valid\r\n    }\r\n}\r\nexport const submitHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : SIGNUP_SUBMIT_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        isAuth : loginBlogApp.isAuth,\r\n        openProfile : loginBlogApp.openProfile,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\n\r\nexport const logoutHandlerInit = () =>{\r\n    return{\r\n        type : LOGOUT_SESSION_INIT\r\n    }\r\n}\r\nexport const logoutHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : LOGOUT_SESSION_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        isAuth : loginBlogApp.isAuth,\r\n        openPost:loginBlogApp.openPost,\r\n        openProfile : loginBlogApp.openProfile\r\n    \r\n    }\r\n}\r\nexport const profileHandlerInit = () =>{\r\n    return{\r\n        type : PROFILE_HANDLER_INIT\r\n    }\r\n}\r\nexport const profileHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : PROFILE_HANDLER_SUCCESS,\r\n        openProfile : loginBlogApp.openProfile,\r\n        openPost : loginBlogApp.openPost\r\n    }\r\n}\r\nexport const postHandlerInit = () =>{\r\n return{\r\n     type : POST_HANDLER_INIT\r\n }   \r\n}\r\nexport const postHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : POST_HANDLER_SUCCESS,\r\n        openProfile : loginBlogApp.openProfile,\r\n        openPost : loginBlogApp.openPost\r\n    }   \r\n   }\r\n\r\n   export const saveHandlerInit = (values) =>{  \r\n    console.log(values);\r\n    return{\r\n        type : SAVE_INIT,\r\n        values : values\r\n    }\r\n}\r\nexport const saveHandlerSuccess = (loginBlogApp) =>{  \r\n    return{\r\n        type : SAVE_SUCCESS,\r\n        loggedInUser : loginBlogApp.loggedInUser,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nexport const editUserHandlerInit = (username) =>{\r\n    return{\r\n        type : EDIT_USER_INIT,\r\n        username : username\r\n    }\r\n}\r\nexport const editUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : EDIT_USER_SUCCESS,\r\n        editObject : loginBlogApp.editObject\r\n    }\r\n}\r\n\r\nexport const deleteUserHandlerInit = (username) =>{\r\n    return{\r\n        type : DELETE_USER_INIT,\r\n        username : username\r\n    }\r\n}\r\nexport const deleteUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n        type : DELETE_USER_SUCCESS,\r\n        usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nexport const saveUserHandlerInit = (editUser) =>{\r\n    return{\r\n        type : SAVE_EDIT_USER_INIT,\r\n        editUser : editUser\r\n    }\r\n}\r\n\r\nexport const saveUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n     type : SAVE_EDIT_USER_SUCCESS,\r\n     usersDetail : loginBlogApp.usersDetail,\r\n     editObject : loginBlogApp.editObject,\r\n     loggedInUser : loginBlogApp.loggedInUser   \r\n    }\r\n}\r\nexport const createUserHandlerInit = (editUser) =>{\r\n    return{\r\n        type : SAVE_CREATE_USER_INIT,\r\n        editUser : editUser\r\n    }\r\n}\r\n\r\nexport const createUserHandlerSuccess = (loginBlogApp) =>{\r\n    return{\r\n     type : SAVE_CREATE_USER_SUCCESS,\r\n     usersDetail : loginBlogApp.usersDetail\r\n    }\r\n}\r\nconst initialState = {\r\n    loggedInUser:{},\r\n    isAuth:false,\r\n    openProfile : false,\r\n    openPost : true,\r\n    usersDetail : [],\r\n    editObject : {},\r\n  \r\n}\r\nconst Login = (state =initialState ,action) =>{\r\n    switch(action.type){\r\n        case SIGNUP_SUBMIT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser : action.loggedInUser,\r\n            isAuth : action.isAuth,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case LOGOUT_SESSION_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser :action.loggedInUser,\r\n            isAuth : action.isAuth,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case PROFILE_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case POST_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            openProfile : action.openProfile,\r\n            openPost : action.openPost\r\n        }\r\n        case SAVE_SUCCESS : \r\n        return{\r\n            ...state,\r\n            loggedInUser : action.loggedInUser,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case EDIT_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editObject : action.editObject,\r\n        }\r\n        case DELETE_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        case SAVE_EDIT_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail,\r\n            editObject : action.editObject,\r\n            loggedInUser : action.loggedInUser\r\n        }\r\n        case SAVE_CREATE_USER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            usersDetail : action.usersDetail\r\n        }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div\r\n            className=\"collapse navbar-collapse container\"\r\n            id=\"navbarSupportedContent\"\r\n          >\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item dropdown\">\r\n                <p\r\n                  className=\"nav-link\"\r\n                  onClick={props.postHandler}\r\n                >\r\n                  <CommentIcon />\r\n                  Posts\r\n                </p>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <div id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item dropdown\">\r\n                    <p\r\n                      className=\"nav-link dropdown-toggle\"\r\n                      id=\"navbarDropdown\"\r\n                      data-toggle=\"dropdown\"\r\n                    >\r\n                      <AccountCircleRoundedIcon />\r\n                      {`${props.loggedInUser.firstName} ${props.loggedInUser.lastName}`}\r\n                    </p>\r\n                    <div\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"navbarDropdown\"\r\n                    >\r\n                      <p\r\n                        className=\"dropdown-item\"\r\n                        id=\"dropdownUserProfile\"\r\n                        onClick={props.profileHandler}\r\n                      >\r\n                        Profile\r\n                      </p>\r\n                      <p\r\n                        className=\"dropdown-item\"\r\n                        id=\"dropdownUserSignOut\"\r\n                        onClick = {props.logoutHandler}\r\n                      >\r\n                        SignOut\r\n                      </p>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </nav> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from \"react\";\r\nimport \"./ProfileDetail.css\";\r\nimport Button from \"../../../UI/Button/Button\";\r\nexport default class ProfileDetail extends Component {\r\n  render() {\r\n    const obj = this.props.loggedInUser;\r\n    const details = Object.keys(obj).map((key) => {\r\n      return (\r\n        <div className = \"col-sm-6\" key={key}> \r\n        <div className = \"row\">\r\n        <label className=\"col-sm-4 labelText\" >{key}:</label>\r\n          <div className=\"col-sm-8 \">\r\n            <p className=\"textPara\">{obj[key]}</p>\r\n          </div>\r\n        </div>            \r\n          </div>\r\n      \r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"jumbotron text-center my-5 mx-auto\">\r\n        <div className=\"form-group row justify-content-across\">{details}</div>\r\n        <Button\r\n          className=\"btn btn-outline-info\"\r\n          id=\"editProfileBtn\"\r\n          onClick={this.props.editProfileHandler}\r\n        >\r\n          EDIT\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Validators } from \"../../../utilities/Validators\";\r\nimport Button from \"../../../UI/Button/Button\";\r\nimport Input from \"../../../UI/Input/Input\";\r\n\r\nclass EditProfile extends Component {\r\n  state = {\r\n    form: {\r\n      username: { value: this.props.loggedInUser.username, valid: true,touched : false },\r\n      role: { value: this.props.loggedInUser.role, valid: true,touched : false },\r\n      password: { value: this.props.loggedInUser.password, valid: true,touched : false },\r\n      firstName: { value: this.props.loggedInUser.firstName, valid: true,touched : false },\r\n      lastName: { value: this.props.loggedInUser.lastName, valid: true,touched : false },\r\n      phonenumber: { value: this.props.loggedInUser.phonenumber, valid: true,touched : false },\r\n    },\r\n    touched: false\r\n  }\r\n  // Input Handler Change\r\n  handleChange = (key) => (value, error) => {\r\n    let updatedValue = { ...this.state.form }\r\n    updatedValue[key] = { value: value, valid: !error,touched :true }\r\n    this.setState({ form: updatedValue });\r\n  };\r\n  // Submit Button\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ touched: true });\r\n    let valid = [];\r\n    for (let key in this.state.form) {\r\n      this.state.form[key].value !== \"\" && this.state.form[key].valid === true ? valid.push(true) : valid.push(false);\r\n    }\r\n    const isValid = valid.every(v => v === true)\r\n   \r\n    if(isValid ){\r\n      let values = { }\r\n      values = {\r\n        username : this.state.form.username.value,\r\n        role : this.state.form.role.value,\r\n        password : this.state.form.password.value,\r\n        firstName : this.state.form.firstName.value,\r\n        lastName : this.state.form.lastName.value,\r\n        phonenumber : this.state.form.phonenumber.value\r\n    }\r\n   this.props.saveButtonHandler(values,isValid);\r\n   this.props.changeModeHandler();   \r\n    } \r\n  };\r\n  render() {\r\n    const details = (\r\n      <>\r\n        {/* User Name */}\r\n        <label className=\"col-sm-2 labelText\">User Name :</label>\r\n        <div className=\"col-sm-4 \">\r\n          <p className=\"textPara\">{this.state.form.username.value}</p>\r\n        </div>\r\n        {/* Password */}\r\n        <label className=\"col-sm-2 labelText\">Password :</label>\r\n        <div className=\"col-sm-4 \">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Password\"\r\n          value={this.state.form.password.value}\r\n          onChange={this.handleChange(\"password\")}\r\n          validators={[\r\n            {\r\n              check: Validators.required,\r\n              message: \"Please Enter Password\",\r\n            },\r\n          ]}\r\n          touched = {this.state.form.password.touched}\r\n        />\r\n        </div>\r\n        \r\n        {/* Role */}\r\n        <label className=\"col-sm-2 labelText\">Role :</label>\r\n        <div className=\"col-sm-4 \">\r\n          <p className=\"textPara\">{this.state.form.role.value}</p>\r\n        </div>\r\n        {/* First Name */}\r\n        <label className=\"col-sm-2 labelText\">First Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your FirstName\"\r\n          value={this.state.form.firstName.value}\r\n          onChange={this.handleChange(\"firstName\")}\r\n          validators={[\r\n            {\r\n              check: Validators.required,\r\n              message: \"Please Enter First Name\",\r\n            },\r\n          ]}\r\n          touched = {this.state.form.firstName.touched}\r\n        />\r\n        </div>\r\n\r\n        {/* Last Name */}\r\n        <label className=\"col-sm-2 labelText\">Last Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your LastName\"\r\n          value={this.state.form.lastName.value}\r\n          onChange={this.handleChange(\"lastName\")}\r\n          validators={[\r\n            {\r\n              check: Validators.required,\r\n              message: \"Please Enter Last Name\",\r\n            },\r\n          ]}\r\n          touched = {this.state.form.lastName.touched}\r\n        />\r\n        </div>\r\n          \r\n        {/* Mobile Number */}\r\n        <label className=\"col-sm-2 labelText\">Mobile Number:</label>\r\n        <div className=\"col-sm-4 \">\r\n        <Input\r\n          type=\"number\"\r\n          placeholder=\"Enter Your Mobile Number\"\r\n          value={this.state.form.phonenumber.value}\r\n          onChange={this.handleChange(\"phonenumber\")}\r\n          validators={[\r\n            {\r\n              check: Validators.phoneNumber,\r\n              message: \"Please Enter Valid Mobile Number\",\r\n            },\r\n          ]}\r\n          touched = {this.state.form.phonenumber.touched}\r\n        />\r\n        </div>\r\n      </>\r\n    )\r\n    return (\r\n      <div className=\"jumbotron text-center my-5 mx-auto\">\r\n        <div className=\"form-group row justify-content-across\">\r\n          {details}\r\n        </div>\r\n        <Button\r\n          onClick={(event)=>this.submitHandler(event)}\r\n        >\r\n          SAVE\r\n      </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default EditProfile","import React, { Component } from \"react\";\r\nimport ProfileDetail from \"./ProfileDetail/ProfileDetail\";\r\nimport EditProfile from \"./EditProfile/EditProfile\";\r\nimport {connect} from \"react-redux\";\r\nimport * as loginAction from \"../../store/redux/LoginRedux/LoginRedux\";\r\n\r\n class MyProfile extends Component {\r\n    state ={\r\n        editMode : false \r\n    }\r\n    editHandler = () =>{\r\n        this.setState({editMode : true})\r\n    }\r\n    changeModeHandler = () =>{      \r\n      this.setState({editMode : false});\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      <div >   \r\n        {!this.state.editMode ? \r\n         <ProfileDetail loggedInUser = {this.props.loggedInUser} editProfileHandler = {this.editHandler}/>\r\n          : <EditProfile loggedInUser = {this.props.loggedInUser} saveButtonHandler = {this.props.onSaveHandler} changeModeHandler = {this.changeModeHandler}/> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        // isValid : state.MyProfile.isValid,\r\n        loggedInUser : state.Login.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onSaveHandler : (values,valid) =>{dispatch(loginAction.saveHandlerInit(values,valid))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyProfile)","import React, { Component } from 'react'\r\nimport Button from \"../../../UI/Button/Button\";\r\n\r\nexport default class UserList extends Component {\r\n    \r\n    editHandler =() =>{\r\n        this.props.editClick(this.props.username)\r\n    }\r\n    deleteHandler = () =>{\r\n        this.props.deleteClick(this.props.username);\r\n    }\r\n    render() {\r\n        let eachChild = (\r\n            <tr key={this.props.username}>\r\n                <td>{this.props.username}</td>\r\n                <td>{this.props.password}</td>\r\n                <td>{this.props.role}</td>\r\n                <td>{this.props.firstName}</td>\r\n                <td>{this.props.lastName}</td>\r\n                <td>{this.props.phonenumber}</td>\r\n                <td>\r\n                    <Button className = \"btn-sm\" onClick = {this.editHandler}>Edit</Button>\r\n                </td>\r\n                <td>\r\n                    <Button className = \"btn-sm\" onClick = {this.deleteHandler}>Delete</Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n        return (\r\n            <>\r\n                <tbody>\r\n                    {eachChild}\r\n                </tbody>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport \"./BackDrop.css\";\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n\r\n)\r\n  \r\n\r\n\r\nexport default Backdrop\r\n","import React, { Component } from 'react';\r\nimport \"./Modal.css\";\r\n// import Aux from \"../../../hoc/Auxilary\";\r\nimport Backdrop from \"../BackDrop/BackDrop\";\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps,nextState){\r\n       return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }  \r\n    render(){\r\n        return (\r\n            <>\r\n            <Backdrop show={this.props.show} clicked={this.props.modelClosed}/>\r\n            <div className=\"Modal\"\r\n            style={{\r\n                transform:this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                opacity: this.props.show ? \"1\" : \"0\"\r\n            }}>\r\n                {this.props.children}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal\r\n","import React, { Component } from \"react\";\r\nimport { Validators } from \"../../../../utilities/Validators\";\r\nimport Input from \"../../../../UI/Input/Input\";\r\nimport Button from \"../../../../UI/Button/Button\";\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    form: {\r\n      username: {\r\n        value: this.props.editObject.username,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n      role: { value: this.props.editObject.role, valid: true, touched: false },\r\n      password: {\r\n        value: this.props.editObject.password,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n      firstName: {\r\n        value: this.props.editObject.firstName,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n      lastName: {\r\n        value: this.props.editObject.lastName,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n      phonenumber: {\r\n        value: this.props.editObject.phonenumber,\r\n        valid: true,\r\n        touched: false,\r\n      },\r\n    },\r\n    touched: false,\r\n  };\r\n  // Input Handler Change\r\n  handleChange = (key) => (value, error) => {\r\n    console.log(key,error);\r\n    let updatedValue = { ...this.state.form };\r\n    updatedValue[key] = { value: value, valid: !error, touched: true };\r\n    this.setState({ form: updatedValue });\r\n  };\r\n  // Submit Button\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ touched: true });\r\n    let valid = [];\r\n    for (let key in this.state.form) {\r\n      console.log(this.state.form[key])\r\n      this.state.form[key].value !== \"\" && this.state.form[key].valid === true\r\n        ? valid.push(true)\r\n        : valid.push(false);\r\n    }\r\n    const isValid = valid.every((v) => v === true);\r\n    if (isValid) {\r\n      let values = {};\r\n      values = {\r\n        username: this.state.form.username.value,\r\n        role: this.state.form.role.value,\r\n        password: this.state.form.password.value,\r\n        firstName: this.state.form.firstName.value,\r\n        lastName: this.state.form.lastName.value,\r\n        phonenumber: this.state.form.phonenumber.value,\r\n      };\r\n      this.props.saveButtonHandler(values);\r\n      this.props.changeModeHandler();\r\n    }\r\n  };\r\n  render() {\r\n    const details = (\r\n      <>\r\n        {/* User Name */}\r\n        <label className=\"col-sm-2 labelText \">User Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your User Name\"\r\n            value={this.state.form.username.value}\r\n            onChange={this.handleChange(\"username\")}\r\n            validators={[\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter Your User Name\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.username.touched}\r\n          />\r\n        </div>\r\n        {/* Password */}\r\n        <label className=\"col-sm-2 labelText\">Password :</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Password\"\r\n            value={this.state.form.password.value}\r\n            onChange={this.handleChange(\"password\")}\r\n            validators={[\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter Password\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.password.touched}\r\n          />\r\n        </div>\r\n\r\n        {/* Role */}\r\n        <label className=\"col-sm-2 labelText\">Role :</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"select\"\r\n            placeholder=\"Select Your Gender\"\r\n            value={this.state.form.role.value}\r\n            onChange={this.handleChange(\"role\")}\r\n            validators={[\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter First Name\",\r\n              },\r\n            ]}\r\n            data={[{ name: \"user\" }, { name: \"admin\" }]}\r\n          />\r\n        </div>\r\n        {/* First Name */}\r\n        <label className=\"col-sm-2 labelText\">First Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your FirstName\"\r\n            value={this.state.form.firstName.value}\r\n            onChange={this.handleChange(\"firstName\")}\r\n            validators={[\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter First Name\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.firstName.touched}\r\n          />\r\n        </div>\r\n        {/* Last Name */}\r\n        <label className=\"col-sm-2 labelText\">Last Name:</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your LastName\"\r\n            value={this.state.form.lastName.value}\r\n            onChange={this.handleChange(\"lastName\")}\r\n            validators={[\r\n              {\r\n                check: Validators.required,\r\n                message: \"Please Enter Last Name\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.lastName.touched}\r\n          />\r\n        </div>\r\n\r\n        {/* Mobile Number */}\r\n        <label className=\"col-sm-2 labelText\">Mobile Number:</label>\r\n        <div className=\"col-sm-4 \">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Mobile Number\"\r\n            value={this.state.form.phonenumber.value}\r\n            onChange={this.handleChange(\"phonenumber\")}\r\n            validators={[\r\n              {\r\n                check: Validators.phoneNumber,\r\n                message: \"Please Enter Valid Mobile Number\",\r\n              },\r\n            ]}\r\n            touched={this.state.form.phonenumber.touched}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n          <div className=\"form-group row justify-content-across\">{details}</div>\r\n          <Button onClick={this.submitHandler}>Save Edit</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditUser;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../../../../UI/Input/Input\";\r\nimport Button from \"../../../../UI/Button/Button\";\r\nimport {Validators} from \"../../../../utilities/Validators\";\r\n\r\nclass NewUser extends Component{\r\n    state = {\r\n        form: {\r\n          username: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n          role: { value: \"user\", valid: true, touched: false },\r\n          password: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n          firstName: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n          lastName: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n          phonenumber: {\r\n            value: \"\",\r\n            valid: false,\r\n            touched: false,\r\n          },\r\n        },\r\n        touched: false,\r\n      };\r\n      // Input Handler Change\r\n      handleChange = (key) => (value, error) => {\r\n          console.log(error)\r\n        let updatedValue = { ...this.state.form };\r\n        updatedValue[key] = { value: value, valid: !error, touched: true };\r\n        this.setState({ form: updatedValue });\r\n      };\r\n      // Submit Button\r\n      submitHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ touched: true });\r\n        let valid = [];\r\n        for (let key in this.state.form) {\r\n          this.state.form[key].value !== \"\" && this.state.form[key].valid === true\r\n            ? valid.push(true)\r\n            : valid.push(false);\r\n        }\r\n        console.log(this.state.form)\r\n        console.log(valid);\r\n        const isValid = valid.every((v) => v === true);\r\n        if (isValid) {\r\n          let values = {};\r\n          values = {\r\n            username: this.state.form.username.value,\r\n            role: this.state.form.role.value,\r\n            password: this.state.form.password.value,\r\n            firstName: this.state.form.firstName.value,\r\n            lastName: this.state.form.lastName.value,\r\n            phonenumber: this.state.form.phonenumber.value,\r\n          };\r\n          this.props.saveButtonHandler(values);\r\n          this.props.changeModeHandler();\r\n        }\r\n      };\r\n      render() {\r\n        const details = (\r\n          <>\r\n            {/* User Name */}\r\n            <label className=\"col-sm-2 labelText \">User Name:</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter Your User Name\"\r\n                value={this.state.form.username.value}\r\n                onChange={this.handleChange(\"username\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.userCheck,\r\n                    message: \"User Name Already Exists\",\r\n                  },\r\n                  {\r\n                    check: Validators.required,\r\n                    message: \"Please Enter UserName\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.username.touched}\r\n              />\r\n            </div>\r\n            {/* Password */}\r\n            <label className=\"col-sm-2 labelText\">Password :</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter Your Password\"\r\n                value={this.state.form.password.value}\r\n                onChange={this.handleChange(\"password\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.required,\r\n                    message: \"Please Enter Password\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.password.touched}\r\n              />\r\n            </div>\r\n    \r\n            {/* Role */}\r\n            <label className=\"col-sm-2 labelText\">Role :</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"select\"\r\n                placeholder=\"Select Your Gender\"\r\n                value={this.state.form.role.value}\r\n                onChange={this.handleChange(\"role\")}             \r\n                data={[{ name: \"user\" }, { name: \"admin\" }]}\r\n                touched={this.state.form.role.touched}\r\n              />\r\n            </div>\r\n            {/* First Name */}\r\n            <label className=\"col-sm-2 labelText\">First Name:</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter Your FirstName\"\r\n                value={this.state.form.firstName.value}\r\n                onChange={this.handleChange(\"firstName\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.required,\r\n                    message: \"Please Enter First Name\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.firstName.touched}\r\n              />\r\n            </div>\r\n            {/* Last Name */}\r\n            <label className=\"col-sm-2 labelText\">Last Name:</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter Your LastName\"\r\n                value={this.state.form.lastName.value}\r\n                onChange={this.handleChange(\"lastName\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.required,\r\n                    message: \"Please Enter Last Name\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.lastName.touched}\r\n              />\r\n            </div>\r\n    \r\n            {/* Mobile Number */}\r\n            <label className=\"col-sm-2 labelText\">Mobile Number:</label>\r\n            <div className=\"col-sm-4 \">\r\n              <Input\r\n                type=\"number\"\r\n                placeholder=\"Enter Your Mobile Number\"\r\n                value={this.state.form.phonenumber.value}\r\n                onChange={this.handleChange(\"phonenumber\")}\r\n                validators={[\r\n                  {\r\n                    check: Validators.phoneNumber,\r\n                    message: \"Please Enter Valid Mobile Number\",\r\n                  },\r\n                ]}\r\n                touched={this.state.form.phonenumber.touched}\r\n              />\r\n            </div>\r\n          </>\r\n        );\r\n        return (\r\n          <div>\r\n            <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n              <div className=\"form-group row justify-content-across\">{details}</div>\r\n              <Button onClick={this.submitHandler}>Save Edit</Button>\r\n            </div>\r\n          </div>\r\n        );\r\n        }\r\n    \r\n       \r\n}\r\nexport default NewUser; \r\n// const EditUsers = (props) => {\r\n\r\n//     const[editUser,setEditUser] = useState({\r\n//         username: \"\",\r\n//         role: \"\",\r\n//         password: \"\",\r\n//         firstName: \"\",\r\n//         lastName: \"\",\r\n//         phonenumber: \"\",\r\n//     })\r\n\r\n//     const[errors,setError] = useState({});\r\n        \r\n//     const inputHandler = event =>{\r\n//         const{name,value} = event.target\r\n//         setEditUser({\r\n//             ...editUser,\r\n//             [name] : value\r\n//         })\r\n//     }\r\n\r\n//     const submitHandler = (e) =>{\r\n//         e.preventDefault();\r\n//          const{errors,valid} = validation(editUser);\r\n//          setError(errors);\r\n//         valid && props.saveButtonHandler(editUser);\r\n//         valid && props.changeModeHandler();\r\n//     };\r\n\r\n//     const obj = editUser\r\n//     const details = Object.keys(obj).map((key) => {\r\n//         return(\r\n//             <>\r\n//             <label className=\"col-sm-2 labelText my-3\">{key}:</label>\r\n//             <div className=\"col-sm-4 \">\r\n//               <input\r\n//                 type = {key}\r\n//                 className=\"form-control my-3\"\r\n//                 defaultValue = {obj[key]}\r\n//                 value={editUser.key}\r\n//                 onChange={inputHandler}\r\n//                 placeholder={key}\r\n//                 name = {key}\r\n//               />\r\n//             {errors[key]  && <small className=\"form-text text-muted textIfFail \">{errors[key]}</small>}\r\n//             </div>\r\n//           </>\r\n//         )\r\n//     });\r\n//     return (\r\n//         <div>\r\n//             <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n//                  <div className=\"form-group row justify-content-across\">\r\n//                      {details}\r\n//                  </div>\r\n//                     <Button onClick={submitHandler}>Save </Button> \r\n//               </div>\r\n//         </div>      \r\n//     )\r\n// };\r\n\r\n// export default EditUsers;","import React, { Component } from 'react'\r\nimport Modal from \"../../../UI/Modal/Modal\";\r\nimport EditUsers from \"./EditUsers/EditUsers\";\r\nimport NewUser from \"./NewUser/NewUser\";\r\n\r\nexport default class CreateUser extends Component {\r\n\r\n    render() {\r\n        const createUser = (\r\n            <div>\r\n            <h3> {this.props.editMode ? \"Edit User\" : \"Create User\"}</h3>\r\n            {this.props.editMode ?\r\n             <EditUsers  \r\n                editMode = {this.props.editMode} \r\n                editObject = {this.props.editObject} \r\n                saveButtonHandler = {this.props.saveButtonHandler} \r\n                changeModeHandler = {this.props.modelClosed} \r\n             /> :\r\n             <NewUser saveButtonHandler = {this.props.saveUserButtonHandler} \r\n             changeModeHandler = {this.props.modelClosed} />\r\n            }\r\n            \r\n\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                 <Modal show={this.props.activePopup} modelClosed = {this.props.modelClosed}>\r\n                    {createUser}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DropDown extends Component {\r\n    render() {\r\n        let options = this.props.options.map(opt =>(\r\n            <option key = {opt} value = {opt}>{opt}</option>\r\n        ));\r\n        return (\r\n            <>\r\n              <select className = \"form-control\" {...this.props}>\r\n                  {options}\r\n              </select>  \r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport DropDown from \"../DropDown/DropDown\";\r\n\r\nconst Pagination = ({\r\n  postPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  currentPage,\r\n  pageSelect,\r\n}) => {\r\n\r\n  const pageNumbers = [];\r\n  const lastPage = Math.ceil(totalPosts / postPerPage);\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"form-inline float-right\">\r\n        <DropDown  onClick={(e) => pageSelect(e.target.value)} options = {[5,10,20] }></DropDown>\r\n        <Button\r\n          onClick={() => paginate(1)}\r\n          disabled={currentPage === 1 ? true : false}\r\n        >\r\n          First Page\r\n        </Button>\r\n        <Button\r\n          onClick={() => paginate(currentPage + 1)}\r\n          disabled={currentPage === lastPage ? true : false}\r\n        >\r\n          Next Page\r\n        </Button>\r\n        {pageNumbers.map((number) => (\r\n          <div key={number} className=\"mx-1\">\r\n            <Button onClick={() => paginate(number)}>{number}</Button>\r\n          </div>\r\n        ))}\r\n        <Button\r\n          onClick={() => paginate(currentPage - 1)}\r\n          disabled={currentPage === 1 ? true : false}\r\n        >\r\n          Prev. Page\r\n        </Button>\r\n        <Button\r\n          onClick={() => paginate(Math.ceil(totalPosts / postPerPage))}\r\n          disabled={currentPage === lastPage ? true : false}\r\n        >\r\n          Last Page\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport \"./Users.css\";\r\nimport UserList from \"./UserList/UserList\";\r\nimport CreateUser from \"./CreateUser/CreateUser\";\r\nimport Pagination from \"../../UI/Pagination/Pagination\";\r\n// import Sort from \"../../UI/Sort/Sort\";\r\nimport Button from \"../../UI/Button/Button\"\r\nimport ImportExportOutlinedIcon from '@material-ui/icons/ImportExportOutlined';\r\nimport * as loginAction from \"../../store/redux/LoginRedux/LoginRedux\";\r\n\r\nclass Users extends Component {\r\n    state = {\r\n        ediMode : false,\r\n        activePopup : false,\r\n        currentPage : 1,\r\n        postPerPage : 5,\r\n        sortType : \"asc\"\r\n    }\r\n    EditHandler = (username) =>{\r\n        this.setState({activePopup : true,editMode : true})\r\n        this.props.onEditHandler(username);\r\n    }\r\n    createHandler = () =>{\r\n        this.setState({activePopup : true,editMode : false})\r\n    }\r\n    modelClicked = () =>{\r\n        this.setState({activePopup : false,editMode : false})\r\n    }\r\n    paginate = (pageNumbers) =>{\r\n        this.setState({currentPage : pageNumbers})\r\n    }\r\n    pageSelect = (pagePerPost) =>{\r\n        this.setState({postPerPage : pagePerPost})\r\n    }\r\n    onSort = ()=>{\r\n        this.state.sortType === \"asc\" ? this.setState({sortType : \"desc\"}) : this.setState({sortType : \"asc\"})      \r\n    }\r\n    render() {\r\n        const indexOfLastPost = this.state.currentPage * this.state.postPerPage;\r\n        const indexOfFirstPost = indexOfLastPost -  this.state.postPerPage;\r\n        let reverseDetail = this.props.usersDetail.reverse();\r\n        const currentPosts = reverseDetail.slice(indexOfFirstPost,indexOfLastPost)\r\n        const sortedArray = currentPosts.sort((a,b)=>{\r\n            const isReversed = (this.state.sortType === \"asc\") ? 1 : -1;\r\n            return isReversed* a.firstName.localeCompare(b.firstName)\r\n        });\r\n        let users = (\r\n            sortedArray.map(details =>{\r\n                return(\r\n                    <UserList \r\n                    key = {details.username}\r\n                    username = {details.username}\r\n                    password = {details.password}\r\n                    firstName = {details.firstName}\r\n                    lastName= {details.lastName}\r\n                    role = {details.role}\r\n                    phonenumber = {details.phonenumber}\r\n                    editClick = {(username)=>this.EditHandler(username)}\r\n                    deleteClick = {this.props.onDeleteHandler}\r\n                />\r\n                )\r\n            })\r\n        )\r\n        return (\r\n            <div>\r\n            <div className=\"jumbotron text-center my-5\">\r\n            <div>\r\n                <Button className=\"my-4 float-right\" onClick={this.createHandler}>Create User</Button>\r\n            </div>\r\n            <div id=\"tableBox row\">             \r\n                    <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>User Name</th>\r\n                        <th>Password</th>\r\n                        <th>Role</th>\r\n                        <th><span>First Name</span> \r\n                        <Button className = \"btn-sm\" onClick ={()=>this.onSort()}><ImportExportOutlinedIcon fontSize=\"small\"/></Button>\r\n                       </th>\r\n                        <th>Last Name</th>\r\n                        <th>Mobile Number</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>   \r\n                </thead>\r\n                        {users}\r\n                    </table>\r\n                </div>\r\n                <div className=\"pageNumbers col-12\" id=\"pagination3\">\r\n                    <Pagination pageSelect = {this.pageSelect} paginate = {this.paginate} currentPage = {this.state.currentPage} postPerPage = {this.state.postPerPage} totalPosts={this.props.usersDetail.length}/>\r\n                </div>            \r\n            </div>\r\n            {this.state.activePopup && <CreateUser \r\n            editObject={this.props.editObject} \r\n            activePopup = {this.state.activePopup} \r\n            editMode = {this.state.editMode}\r\n            saveButtonHandler ={this.props.onSaveButtonHandler}\r\n            saveUserButtonHandler = {this.props.onSaveUserButtonHandler}\r\n            modelClosed = {this.modelClicked}    \r\n            />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        editObject : state.Login.editObject,\r\n        usersDetail : state.Login.usersDetail\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onEditHandler : (username)=>{dispatch(loginAction.editUserHandlerInit(username))},\r\n        onDeleteHandler : (username)=>{dispatch(loginAction.deleteUserHandlerInit(username))},\r\n        onSaveButtonHandler : (editUser) =>{dispatch(loginAction.saveUserHandlerInit(editUser))},\r\n        onSaveUserButtonHandler : (editUser) =>{dispatch(loginAction.createUserHandlerInit(editUser))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Users);","import React, { Component } from \"react\";\r\nimport \"./Profile.css\";\r\nimport \"../../App.css\";\r\nimport \"../../components/MyProfile/MyProfile\";\r\nimport MyProfile from \"../../components/MyProfile/MyProfile\";\r\nimport Users from \"../../components/Users/Users\";\r\nexport default class Profile extends Component {\r\n  state = {\r\n    toggleTab: 1,\r\n  };\r\n\r\n  toggleTabClick = (index) => {\r\n    this.setState({ toggleTab: index });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\" id=\"verticalTab\">\r\n          <div className=\"col-2 tabDivs\">\r\n            <div className=\"row\">\r\n              <button\r\n                className={\r\n                  this.state.toggleTab === 1\r\n                    ? \"tabss active-tabss btn\"\r\n                    : \"tabss btn\"\r\n                }\r\n                onClick={() => this.toggleTabClick(1)}\r\n              >\r\n                My Profile\r\n              </button>\r\n            </div>\r\n            {this.props.loggedInUser.role === \"admin\" && (\r\n              <div className=\"row\">\r\n                <button\r\n                  className={\r\n                    this.state.toggleTab === 2\r\n                      ? \"tabss active-tabss btn\"\r\n                      : \"tabss btn\"\r\n                  }\r\n                  onClick={() => this.toggleTabClick(2)}\r\n                >\r\n                  Users\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"col-10\">\r\n            <div className=\"row content-tabs\">\r\n              <div\r\n                className={\r\n                  this.state.toggleTab === 1\r\n                    ? \"contents  active-contents\"\r\n                    : \"contents\"\r\n                }\r\n              >\r\n                <div className =\"row headingColor justify-content-center\">\r\n                <h2 className=\"heading \">Logged In User Detail</h2>\r\n                </div>\r\n                <hr />\r\n                <MyProfile loggedInUser = {this.props.loggedInUser}/>\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.toggleTab === 2\r\n                    ? \"contents  active-contents\"\r\n                    : \"contents\"\r\n                }\r\n              >\r\n              <div className =\"row headingColor justify-content-center\">\r\n                <h2 className=\"heading \">Users Detail</h2>\r\n\r\n              </div>\r\n                <hr />\r\n                <Users />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport { Validators } from \"../../utilities/Validators\";\r\n\r\nexport default class CreatePost extends Component {\r\n  state = {\r\n    post: { value: \"\",valid: false, touched: false },\r\n    counter: 500,\r\n    date : \"\"\r\n  };\r\n  handleChange = (key) => (value, error) => {\r\n    if (this.state.counter !== 0) {\r\n      this.setState({ [key]: { value: value, valid: !error, touched: true } });\r\n      const counter = 500 - value.length;\r\n      this.setState({ counter: counter });\r\n    }\r\n  };\r\n  submitHandler = ()=>{\r\n    var today = new Date();\r\n\r\n    var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    \r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    \r\n    var dateTime = date+\" \"+time;\r\n\r\n    this.setState({date : dateTime},() => {\r\n        this.props.saveButtonHandler(this.state.post.value,this.state.date);\r\n        this.props.modelClosed();\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          show={this.props.activePopup}\r\n          modelClosed={this.props.modelClosed}\r\n        >\r\n          <div>\r\n            <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n              <h3 className=\"display-4\">Create Post</h3>\r\n              <div>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  placeholder=\"...Write Post\"\r\n                  value={this.state.post.value}\r\n                  onChange={this.handleChange(\"post\")}\r\n                  validators={[\r\n                    {\r\n                      check: Validators.required,\r\n                      message: \"Please Write Post\",\r\n                    },\r\n                  ]}\r\n                  touched={this.state.post.touched}\r\n                />\r\n                <p className=\"text-info\">\r\n                  {\" \"}\r\n                  You Have{\" \"}\r\n                  <span\r\n                    className={\r\n                      this.state.counter === 0 ? \"text-danger\" : \"text-info\"\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    {this.state.counter}\r\n                  </span>\r\n                  Character Left..\r\n                </p>\r\n              </div>\r\n              <Button onClick={this.submitHandler}>Save Post</Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export  const INITILIZE_POST_INIT = \"INITILIZE_POST_INIT\";\r\nexport const INITILIZE_POST_SUCCESS = \"INITILIZE_POST_SUCCESS\";\r\n\r\nexport const POST_CLICK_INIT = \"POST_CLICK_INIT\";\r\nexport const POST_CLICK_SUCCESS = \"POST_CLICK_SUCCESS\";\r\n\r\nexport const SAVE_POST_INIT = \"SAVE_POST_INIT\";\r\nexport const SAVE_POST_SUCCESS = \"SAVE_POST_SUCCESS\";\r\n\r\nexport const SHARE_POST_INIT = \"SHARE_POST_INIT\";\r\nexport const SHARE_POST_SUCCESS = \"SHARE_POST_SUCCESS\";\r\n\r\nexport const initializePostInit = ()=>{\r\n    return{\r\n        type : INITILIZE_POST_INIT\r\n    }\r\n}\r\nexport const initializePostSuccess = (userPost) =>{\r\n    return{\r\n        type : INITILIZE_POST_SUCCESS,\r\n        userPost:userPost\r\n    }\r\n}\r\n\r\nexport const postClickInit = (userPost) =>{\r\n    // console.log(userPost);\r\n    return{\r\n        type : POST_CLICK_INIT,\r\n        userPost : userPost\r\n    }\r\n}\r\nexport const postClickSuccess = (pendingPostArray,approvedPost,adminPost) =>{\r\n    return{\r\n        type : POST_CLICK_SUCCESS,\r\n        pendingPostArray : pendingPostArray,\r\n        approvedPost : approvedPost,\r\n        adminPost : adminPost\r\n    }\r\n}\r\n\r\nexport const shareHandlerInit = (selectedUser,selectedPost) =>{\r\n    console.log(selectedUser,selectedPost);\r\n    return{\r\n        type : SHARE_POST_INIT,\r\n        selectedUser : selectedUser,\r\n        selectedPost : selectedPost\r\n    }\r\n}\r\nexport const sharePostSuccess = (userPost) =>{\r\n    return{\r\n        type : SHARE_POST_SUCCESS,\r\n        userPost : userPost\r\n    }\r\n}\r\n\r\nexport const saveHandlerInit = (post,date) =>{\r\n    console.log(post,date);\r\n    return{\r\n        type:SAVE_POST_INIT,\r\n        post : post,\r\n        date : date      \r\n    }\r\n}\r\nexport const saveHandlerSuccess = (userPost) =>{\r\n    return{\r\n        type:SAVE_POST_SUCCESS,\r\n        userPost : userPost\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    userPost : [],\r\n    pendingPostArray : [],\r\n    approvedPost : [],\r\n    adminPost : []\r\n}\r\nconst Post = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case INITILIZE_POST_SUCCESS : \r\n        return{\r\n            ...state,\r\n            userPost : action.userPost\r\n        }\r\n\r\n        case POST_CLICK_SUCCESS : \r\n        return{\r\n            ...state,\r\n            pendingPostArray : action.pendingPostArray,\r\n            approvedPost : action.approvedPost,\r\n            adminPost : action.adminPost\r\n        }\r\n        case SAVE_POST_SUCCESS : \r\n         return{\r\n             ...state,\r\n             userPost : action.userPost\r\n        }\r\n        case SHARE_POST_SUCCESS :\r\n            return{\r\n                ...state,\r\n                userPost : action.userPost\r\n            }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\nexport default Post;","import React, { Component } from \"react\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nexport default class SharePost extends Component {\r\n    state = {\r\n       selecteduser : [],\r\n       shareButton : false  \r\n    }\r\n    checkBoxHandler = (event) =>{\r\n        let userName = [...this.state.selecteduser];\r\n        if(event.target.checked){\r\n            userName.push(event.target.value);\r\n        }\r\n        else{\r\n            const editObjIndex = userName.findIndex(user => user === event.target.value);\r\n            userName.splice(editObjIndex, 1);\r\n        }\r\n        if(userName !== null){\r\n          this.setState({shareButton : true});\r\n        }\r\n        this.setState({selecteduser : userName});\r\n    }\r\n    submitHandler = () =>{\r\n        this.props.saveButtonHandler(this.state.selecteduser,this.props.selectedPost);\r\n        this.props.modelClosed();\r\n    }\r\n  render() {\r\n    const users = this.props.usersDetail.map((user) => {\r\n      if (user.role !== \"admin\" && user.username !== this.props.selectedPost.username) {\r\n        return (\r\n          <div key={user.username} className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick = {(event)=>this.checkBoxHandler(event)}\r\n              value={user.username}\r\n            />\r\n            <label className=\"form-check-label\" >\r\n              {user.username}\r\n            </label>\r\n          </div>\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n    return (\r\n      <div>\r\n        <Modal\r\n          show={this.props.activePopup}\r\n          modelClosed={this.props.modelClosed}\r\n        >\r\n          <div>\r\n            <div className=\"jumbotron text-center my-5\" id=\"myProfileDiv\">\r\n              <h4 className=\"display-4\">Share Post</h4>\r\n              <div>{users}</div>\r\n              <Button disabled={!this.state.shareButton} className = \"my-2\" onClick={this.submitHandler}>Share</Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ReadMore extends Component {\r\n  state = {\r\n    toggleSwitch: this.props.readMore,\r\n  };\r\n  toggleHandler = () => {\r\n    this.setState({ toggleSwitch: !this.state.toggleSwitch });\r\n  };\r\n  render() {\r\n    let textRead = this.state.toggleSwitch ? (\r\n      <p>{this.props.text.slice(0, 200)}</p>\r\n    ) : (\r\n      <p>{this.props.text}</p>\r\n    );\r\n    return (\r\n      <div>\r\n        {textRead}\r\n        <div className=\"row justify-content-end mr-4 \">\r\n          <p\r\n            className=\"nav-link text-info small\"\r\n            onClick={this.toggleHandler}\r\n          >\r\n            {this.state.toggleSwitch ? \"Read More\" : \"Read Less\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Pagination from \"../../UI/Pagination/Pagination\";\r\nimport CreatePost from \"../../components/CreatePost/CreatePost\";\r\nimport { connect } from \"react-redux\";\r\nimport * as postAction from \"../../store/redux/PostRedux/PostRedux\";\r\nimport SharePost from \"../SharePost/SharePost\";\r\nimport \"./AllPost.css\";\r\nimport ReadMore from \"../../UI/ReadMore/ReadMore\";\r\n\r\nclass AllPost extends Component {\r\n  state = {\r\n    activePopup: false,\r\n    currentPage: 1,\r\n    postPerPage: 5,\r\n    sortType: \"asc\",\r\n    checkBox: false,\r\n    checkBoxPopUp: false,\r\n    selectedPost : {},\r\n    readMore : true\r\n  };\r\n\r\n  createHandler = () => {\r\n    this.setState({ activePopup: true });\r\n  };\r\n  modelClicked = () => {\r\n    this.setState({ activePopup: false, checkBoxPopUp: false });\r\n  };\r\n\r\n  paginate = (pageNumbers) => {\r\n    this.setState({ currentPage: pageNumbers });\r\n  };\r\n  pageSelect = (pagePerPost) => {\r\n    this.setState({ postPerPage: pagePerPost });\r\n  };\r\n\r\n  onSort = () => {\r\n    this.state.sortType === \"asc\"\r\n      ? this.setState({ sortType: \"desc\" })\r\n      : this.setState({ sortType: \"asc\" });\r\n  };\r\n\r\n  checkBoxHandler = (event, post, username) => {\r\n    this.setState({ checkBox: true }, () => {\r\n      if (this.state.checkBox) {\r\n        let adminDecision = window.confirm(\r\n          \"Do you want to allow this post to be visible to other users?\"\r\n        );\r\n        if (adminDecision) {\r\n          this.setState({ checkBoxPopUp: true ,selectedPost :{post : post , username : username}});\r\n        } else {\r\n          this.setState({selectedPost :{post : post , username : username}},()=>{\r\n            this.props.onSharedHandler([],this.state.selectedPost)\r\n          });\r\n        }\r\n      }\r\n    });\r\n    console.log(event.target, post, username);\r\n    console.log(\"clicked\");\r\n  };\r\n\r\n  // readMoreHandler = (post) =>{     \r\n  //   if(this.state.read){\r\n  //     this.setState({read : false});\r\n  //     return post;\r\n  //   }\r\n  //   else{      \r\n  //     this.setState({read : true});\r\n  //     console.log(post.substring(0, 200) + \".....\")\r\n  //     return post.substring(0, 200) + \".....\";\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const indexOfLastPost = this.state.currentPage * this.state.postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - this.state.postPerPage;\r\n    const currentPosts = this.props.approvedPost.slice(\r\n      indexOfFirstPost,\r\n      indexOfLastPost\r\n    );\r\n    const sortedArray = currentPosts.sort((a, b) => {\r\n      const isReversed = this.state.sortType === \"asc\" ? 1 : -1;\r\n      return isReversed * a.date.localeCompare(b.date);\r\n    });\r\n    // let textRead;\r\n    const approvedPost = sortedArray.map((post) => {\r\n\r\n      return (\r\n        <div className=\"card m-3 mx-auto cardBox\" style={{ width: '45rem' }} key={post.date}>\r\n          <div className = \"postBox\">\r\n          <ReadMore text = {post.post} readMore = {this.state.readMore}/>\r\n          </div>\r\n          <div className=\"row justify-content-between\">\r\n          {(this.props.loggedInUser.role === \"admin\" &&  this.props.tabContent === \"pendingPost\") && \r\n          <div className = \"col-2\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value={this.state.checkBox}\r\n              onClick={(event) =>\r\n                this.checkBoxHandler(event, post.post, post.username)\r\n              }\r\n            />\r\n          </div>}\r\n             <div className = \"col-5\">\r\n             <small>{post.username}</small>\r\n             </div>\r\n             <div className = \"col-5\">\r\n             <small>{post.date}</small>\r\n             </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.props.loggedInUser.role !== \"admin\" &&\r\n          (this.props.tabContent === \"allPost\" ||\r\n            this.props.tabContent === \"pendingPost\") ? (\r\n            <Button className=\"float-right\" onClick={this.createHandler}>\r\n              Create Post\r\n            </Button>\r\n          ) : (\r\n            this.props.tabContent === \"promotionalPost\" && (\r\n              <Button className=\"float-right\" onClick={this.createHandler}>\r\n                Create Post\r\n              </Button>\r\n            )\r\n          )}\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button className=\"btn-sm float-right\" onClick={() => this.onSort()}>\r\n            Sort Date\r\n          </Button>\r\n        </div>\r\n        <div className=\"\">\r\n        {approvedPost}\r\n        </div>\r\n        <Pagination\r\n          pageSelect={this.pageSelect}\r\n          paginate={this.paginate}\r\n          currentPage={this.state.currentPage}\r\n          postPerPage={this.state.postPerPage}\r\n          totalPosts={this.props.approvedPost.length}\r\n        />\r\n        {this.state.activePopup && (\r\n          <CreatePost\r\n            activePopup={this.state.activePopup}\r\n            saveButtonHandler={this.props.onSaveButtonHandler}\r\n            modelClosed={this.modelClicked}\r\n          />\r\n        )}\r\n        {this.state.checkBoxPopUp && (\r\n          <SharePost\r\n            loggedInUser={this.props.loggedInUser}\r\n            selectedPost = {this.state.selectedPost}\r\n            usersDetail={this.props.usersDetail}\r\n            activePopup={this.state.checkBoxPopUp}\r\n            modelClosed={this.modelClicked}\r\n            saveButtonHandler={this.props.onSharedHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userPost: state.Post.userPost,\r\n    usersDetail: state.Login.usersDetail,\r\n    loggedInUser: state.Login.loggedInUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSaveButtonHandler: (post, date) => {\r\n      dispatch(postAction.saveHandlerInit(post, date))\r\n    },\r\n    onSharedHandler : (selectedUser,selectedPost) => {\r\n      dispatch(postAction.shareHandlerInit(selectedUser,selectedPost))\r\n    },\r\n\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllPost);\r\n","import React, { Component } from \"react\";\r\nimport \"./Post.css\";\r\nimport AllPost from \"../../components/AllPost/AllPost\";\r\nimport \"../../App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as postAction from \"../../store/redux/PostRedux/PostRedux\";\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    toggleTab: 2,\r\n  };\r\n\r\n  toggleTabClick = (index) => {\r\n    this.setState({ toggleTab: index });\r\n    this.props.onPost(this.props.userPost);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onInitlizer();\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.userPost !== prevProps.userPost){\r\n      this.props.onPost(this.props.userPost);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"tabDiv\">\r\n        <div className=\"bloc-tabs\">\r\n          <button\r\n            className={this.state.toggleTab === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n            onClick={() => this.toggleTabClick(1)}\r\n          >\r\n            Pending Post\r\n          </button>\r\n          <button\r\n            className={this.state.toggleTab === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n            onClick={() => this.toggleTabClick(2)}\r\n          >\r\n            All Post\r\n          </button>\r\n          {this.props.loggedInUser.role === \"admin\" && (\r\n            <button\r\n              className={\r\n                this.state.toggleTab === 3 ? \"tabs active-tabs\" : \"tabs\"\r\n              }\r\n              onClick={() => this.toggleTabClick(3)}\r\n            >\r\n              Promotional Post\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"content-tabs\">\r\n          <div\r\n            className={\r\n              this.state.toggleTab === 1 ? \"content  active-content\" : \"content\"\r\n            }\r\n          >\r\n            <div className=\"container\">\r\n              <h4 className=\"display-3 text-center heading\">Pending Post</h4>\r\n              <hr />\r\n              <AllPost\r\n                loggedInUser={this.props.loggedInUser}\r\n                approvedPost={this.props.pendingPostArray}\r\n                tabContent = \"pendingPost\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              this.state.toggleTab === 2 ? \"content  active-content\" : \"content\"\r\n            }\r\n          >\r\n            <div className=\"container\">\r\n              <h4 className=\"display-3 text-center heading\">All Post</h4>\r\n              <hr />\r\n              <AllPost\r\n                loggedInUser={this.props.loggedInUser}\r\n                approvedPost={this.props.approvedPost}\r\n                tabContent = \"allPost\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              this.state.toggleTab === 3 ? \"content  active-content\" : \"content\"\r\n            }\r\n          >\r\n            <div className=\"container\">\r\n              <h4 className=\"display-3 text-center heading\">Promotional Post</h4>\r\n              <hr />\r\n              <AllPost\r\n                loggedInUser={this.props.loggedInUser}\r\n                approvedPost={this.props.adminPost}\r\n                tabContent = \"promotionalPost\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userPost: state.Post.userPost,\r\n    pendingPostArray: state.Post.pendingPostArray,\r\n    approvedPost: state.Post.approvedPost,\r\n    adminPost: state.Post.adminPost,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onInitlizer: () => {\r\n      dispatch(postAction.initializePostInit());\r\n    },\r\n    onPost: (userPost) => {\r\n      dispatch(postAction.postClickInit(userPost));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\r\n","import React from 'react'\r\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\r\nimport \"./Spinner.css\";\r\nconst Spinner = ({loading}) => {\r\n    return (\r\n        <div className = \"Spinner\">\r\n             <ClimbingBoxLoader color={'#2caabe'} loading={loading} size={20} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport Navbar from \"../../UI/Navbar/Navbar\";\r\nimport Profile from \"../../container/Profile/Profile\";\r\nimport Post from \"../../container/Post/Post\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\n class BlogPost extends Component {\r\n  state={\r\n    openProfile : false,\r\n    openPost : true,\r\n    loading : false\r\n  }\r\n  componentDidMount(){\r\n    this.setState({loading : true});\r\n    setTimeout(()=>{\r\n      this.setState({loading : false});\r\n    },3000)\r\n  }\r\n  componentDidUpdate(){\r\n    if(this.state.openPost !== this.props.openPost || this.state.openProfile !== this.props.openProfile){\r\n\r\n      this.setState({openProfile : this.props.openProfile,openPost : this.props.openPost},()=>{\r\n        this.setState({loading : true});\r\n        setTimeout(()=>{\r\n          this.setState({loading : false});\r\n        },3000)\r\n  \r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n       <Navbar loggedInUser ={this.props.loggedInUser} logoutHandler ={this.props.logoutHandler} profileHandler ={this.props.profileHandler} postHandler = {this.props.postHandler}/>\r\n        {this.state.openPost ? \r\n        this.state.loading ? <Spinner \r\n          loading={this.state.loading} \r\n          /> : \r\n          <Post loggedInUser ={this.props.loggedInUser}/>\r\n        :\r\n        this.state.openProfile  && this.state.loading ? <Spinner \r\n          loading={this.state.loading} \r\n          /> :\r\n          <Profile loggedInUser ={this.props.loggedInUser}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogPost;","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport Login from \"./components/Login/Login\";\nimport * as loginAction from \"./store/redux/LoginRedux/LoginRedux\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport BlogPost from './components/BlogPost/BlogPost';\n\n\nclass App extends Component {\n  state = {\n    isSubmit : false\n  }\n  componentDidMount(){\n    this.props.onInitlizeApp();\n  }\n  componentDidUpdate(){\n    if(this.state.isSubmit !== this.props.isAuth){\n      this.setState({isSubmit : this.props.isAuth})\n    }\n   \n  }\n  confirmLogoutHandler = () =>{\n    if (window.confirm(\"Do you want to Signout?\")) {\n     this.props.onLogoutHandler();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.isSubmit ? \n          <Login \n          submitButtonHandler = {this.props.onSubmitHandler} \n          isAuthenticate = {this.props.isAuth}\n          /> \n          : \n          <BlogPost \n          loggedInUser = {this.props.loggedInUser} \n          logoutHandler = {this.confirmLogoutHandler}\n          profileHandler = {this.props.onProfileHandler}\n          openProfile = {this.props.openProfile}\n          postHandler = {this.props.onPostHandler}\n          openPost = {this.props.openPost}\n          /> }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state =>{\n  return{\n    isAuth : state.Login.isAuth,\n    loggedInUser : state.Login.loggedInUser,\n    openProfile : state.Login.openProfile,\n    openPost : state.Login.openPost\n  }\n}\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onInitlizeApp : ()=> dispatch(loginAction.initlizerAppInit()),\n    onSubmitHandler : (values,valid) => dispatch(loginAction.submitHandlerInit(values,valid)),\n    onLogoutHandler : ()=>dispatch(loginAction.logoutHandlerInit()),\n    onProfileHandler : () =>dispatch(loginAction.profileHandlerInit()),\n    onPostHandler : () =>dispatch(loginAction.postHandlerInit())\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport Login from \"./LoginRedux/LoginRedux\";\r\nimport Post from \"./PostRedux/PostRedux\";\r\n\r\nexport default combineReducers({\r\n    Login,Post\r\n})\r\n","import * as loginAction from \"../../redux/LoginRedux/LoginRedux\";\r\nimport { put } from \"redux-saga/effects\";\r\nexport function* initilizeHandlerSaga(){\r\n    const localValue =  JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    localStorage.removeItem('loginBlogApp');\r\n    const loginBlogApp = {\r\n        isAuth : false,\r\n        loggedInUser : {},\r\n        openProfile : false,\r\n        openPost : true,\r\n        usersDetail : [],\r\n        editObject : {},\r\n        userPost : []\r\n    }\r\n\r\n    if (localValue === null) {\r\n        const userArrayDetail = [];\r\n        const userDetail = {\r\n            username: \"vivek@123\",\r\n            password: \"Vivek@123\",\r\n            role: \"admin\",\r\n            firstName: \"Vivek\",\r\n            lastName: \"Bindal\",\r\n            phonenumber: 8888269609,\r\n        }\r\n        userArrayDetail.push(userDetail);\r\n       yield localStorage.setItem(\"usersDetail\", JSON.stringify(userArrayDetail));\r\n       loginBlogApp.usersDetail = userArrayDetail;\r\n    }    \r\n    else{\r\n        loginBlogApp.usersDetail = localValue; \r\n    }\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlogApp));\r\n}\r\nexport function* submitHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for(let users in localValue){\r\n        if(localValue[users].username === action.username && localValue[users].password === action.password){\r\n            loginBlog.isAuth = action.isAuth;\r\n            loginBlog.loggedInUser = localValue[users];\r\n            loginBlog.usersDetail = [...localValue];\r\n            yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n            yield put(loginAction.submitHandlerSuccess(loginBlog));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function* logoutHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.isAuth = false;\r\n    updateValue.loggedInUser = {};\r\n    updateValue.openProfile = false;\r\n    updateValue.openPost = true;\r\n    updateValue.editObject = {};\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.logoutHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* profileHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.openProfile = true;\r\n    updateValue.openPost = false;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.profileHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* postHandlerSaga(){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = {...loginBlog};\r\n    updateValue.openProfile = false;\r\n    updateValue.openPost = true;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(loginAction.postHandlerSuccess(updateValue));\r\n}\r\n\r\nexport function* saveHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    for(let users in localValue){\r\n        if(localValue[users].username === action.values.username && localValue[users].role === action.values.role){\r\n            localValue[users] = action.values;\r\n            loginBlog.loggedInUser = localValue[users];\r\n            loginBlog.usersDetail = [...localValue];\r\n        }        \r\n        yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n        yield put(loginAction.saveHandlerSuccess(loginBlog));\r\n    }\r\n}\r\nexport function* editUserHandlerSaga(action){\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const editObject = loginBlog.usersDetail.find(user => user.username === action.username);\r\n        loginBlog.editObject = editObject;\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n        yield put(loginAction.editUserHandlerSuccess(loginBlog));    \r\n}\r\n\r\nexport function* deleteUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const editObjIndex = loginBlog.usersDetail.findIndex(user => user.username === action.username);\r\n    loginBlog.usersDetail.splice(editObjIndex, 1);\r\n    localValue = loginBlog.usersDetail;\r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.deleteUserHandlerSuccess(loginBlog));\r\n}\r\nexport function* saveUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n        const editObjIndex = loginBlog.usersDetail.findIndex(user => user.username === loginBlog.editObject.username);\r\n        if(loginBlog.editObject.username === loginBlog.loggedInUser.username){\r\n            loginBlog.loggedInUser = action.editUser;\r\n        }\r\n        loginBlog.usersDetail[editObjIndex] = action.editUser;\r\n        localValue = loginBlog.usersDetail;\r\n        loginBlog.editObject = {}    \r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.saveUserHandlerSuccess(loginBlog));\r\n}\r\nexport function* saveCreateUserHandlerSaga(action){\r\n    let localValue = JSON.parse(localStorage.getItem(\"usersDetail\"));\r\n    const loginBlog =  JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    loginBlog.usersDetail.push(action.editUser);\r\n    localValue.push(action.editUser);\r\n    yield localStorage.setItem(\"usersDetail\", JSON.stringify(localValue));\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(loginBlog));\r\n    yield put(loginAction.createUserHandlerSuccess(loginBlog));\r\n}","import * as postAction from \"../../redux/PostRedux/PostRedux\";\r\nimport { put } from \"redux-saga/effects\";\r\n\r\nexport function* initilizeSage() {\r\n    const userPosts = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    if (userPosts === null) {\r\n        let arrayPost = [];\r\n        yield localStorage.setItem(\"userPost\", JSON.stringify(arrayPost));\r\n    } else {\r\n        localValue.userPost = userPosts;\r\n        yield localStorage.setItem(\"userPost\", JSON.stringify(userPosts));\r\n        yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(localValue));\r\n        yield put(postAction.initializePostSuccess(userPosts));\r\n        yield put(postAction.postClickInit(userPosts));\r\n    }\r\n}\r\n\r\nexport function* savePostHandlerSaga(action) {\r\n    const userPosts = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = { ...localValue };\r\n    let approvedPost = false;\r\n    let sharePost = [];\r\n    if (updateValue.loggedInUser.role === \"admin\") {\r\n        approvedPost = true;\r\n    }\r\n    for(let user in updateValue.usersDetail){\r\n        if(updateValue.usersDetail[user].role === \"user\"){\r\n            sharePost.push(updateValue.usersDetail[user].username);           \r\n        }\r\n    }\r\n    const postObject = {\r\n        approved: approvedPost,\r\n        sharePost:sharePost,\r\n        date: action.date,\r\n        post: action.post,\r\n        username: updateValue.loggedInUser.username,\r\n    };\r\n\r\n    userPosts.push(postObject);\r\n    yield localStorage.setItem(\"userPost\", JSON.stringify(userPosts));\r\n\r\n    updateValue.userPost = userPosts;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(updateValue));\r\n    yield put(postAction.saveHandlerSuccess(userPosts));\r\n}\r\n\r\nexport function* allPostClickSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    const updateValue = { ...localValue };\r\n    const pendingPostArray = [];\r\n    const approvedPost = [];\r\n    const adminPost = [];\r\n    // let arrayForPage=[];  \r\n    if (action.userPost !== null) {\r\n        let reverseArray = action.userPost.reverse();\r\n        reverseArray.forEach(e => {\r\n            if (e.username === updateValue.loggedInUser.username || updateValue.loggedInUser.role === \"admin\") {\r\n                // Condition For Pending Post\r\n                if (e.approved === false) {\r\n                    pendingPostArray.push(e);\r\n                    localStorage.setItem(\"postForPending\", JSON.stringify(pendingPostArray));\r\n                }\r\n\r\n                // Condition For all post\r\n                for (let i = 0; i < updateValue.usersDetail.length; i++) {\r\n                    if (e.approved === true && updateValue.usersDetail[i].username === e.username && updateValue.usersDetail[i].role !== \"admin\") {\r\n                        approvedPost.push(e);\r\n                        localStorage.setItem(\"postForallPost\", JSON.stringify(approvedPost));\r\n                    }\r\n                }\r\n\r\n                // Condition For Promotional Post\r\n                for (let i = 0; i < updateValue.usersDetail.length; i++) {\r\n                    if (e.approved === true && updateValue.usersDetail[i].username === e.username && updateValue.usersDetail[i].role === \"admin\") {\r\n                        adminPost.push(e);\r\n                        localStorage.setItem(\"postByAdmin\", JSON.stringify(adminPost));\r\n                    }\r\n                }\r\n\r\n            }\r\n            else if (e.sharePost !== \"\") {\r\n                for (let i = 0; i < e.sharePost.length; i++) {\r\n                    if (e.sharePost[i] === updateValue.loggedInUser.username) {\r\n                        for (let j = 0; j < updateValue.usersDetail.length; j++) {\r\n                            if (updateValue.usersDetail[j].username === e.sharePost[i] && e.approved === true) {\r\n                                approvedPost.push(e);\r\n                                localStorage.setItem(\"postForallPost\", JSON.stringify(approvedPost));\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    yield put(postAction.postClickSuccess(pendingPostArray, approvedPost, adminPost));\r\n}\r\n\r\nexport function* sharePostHandlerSaga(action) {\r\n    const localValue = JSON.parse(localStorage.getItem(\"userPost\"));\r\n    const localObject = JSON.parse(localStorage.getItem(\"loginBlogApp\"));\r\n    let updateValue = [...localValue];\r\n\r\n    const editObjectIndex = updateValue.findIndex(user => (user.username === action.selectedPost.username && user.post === action.selectedPost.post));\r\n    updateValue[editObjectIndex].approved = true;\r\n\r\n        \r\n        updateValue[editObjectIndex].sharePost = action.selectedUser;\r\n    \r\n    localObject.userPost = updateValue;\r\n    yield localStorage.setItem(\"loginBlogApp\", JSON.stringify(localObject));\r\n    yield localStorage.setItem(\"userPost\", JSON.stringify(updateValue));\r\n    yield put(postAction.sharePostSuccess(updateValue));\r\n}","import { takeLatest } from \"@redux-saga/core/effects\";\r\nimport * as loginAction from \"../redux/LoginRedux/LoginRedux\";\r\nimport * as postAction from \"../redux/PostRedux/PostRedux\";\r\n\r\nimport {initilizeHandlerSaga,submitHandlerSaga,logoutHandlerSaga,profileHandlerSaga,\r\n    postHandlerSaga,saveHandlerSaga,editUserHandlerSaga,\r\n    deleteUserHandlerSaga,saveUserHandlerSaga,saveCreateUserHandlerSaga} from \"./LoginSaga/LoginSaga\";\r\nimport {initilizeSage,savePostHandlerSaga,allPostClickSaga,sharePostHandlerSaga} from \"./PostSaga/PostSaga\";\r\n\r\nexport function* watch(){\r\n    // Login Action\r\n    yield takeLatest(loginAction.INITLIZE_APP,initilizeHandlerSaga);\r\n    yield takeLatest(loginAction.SIGNUP_SUBMIT_INIT,submitHandlerSaga)\r\n    yield takeLatest(loginAction.LOGOUT_SESSION_INIT,logoutHandlerSaga)\r\n    yield takeLatest(loginAction.PROFILE_HANDLER_INIT,profileHandlerSaga)\r\n    yield takeLatest(loginAction.POST_HANDLER_INIT,postHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_INIT,saveHandlerSaga)\r\n    yield takeLatest(loginAction.EDIT_USER_INIT,editUserHandlerSaga)\r\n    yield takeLatest(loginAction.DELETE_USER_INIT,deleteUserHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_EDIT_USER_INIT,saveUserHandlerSaga)\r\n    yield takeLatest(loginAction.SAVE_CREATE_USER_INIT,saveCreateUserHandlerSaga)\r\n\r\n    // Post Action\r\n    yield takeLatest(postAction.INITILIZE_POST_INIT,initilizeSage)\r\n    yield takeLatest(postAction.SAVE_POST_INIT,savePostHandlerSaga)\r\n    yield takeLatest(postAction.POST_CLICK_INIT,allPostClickSaga)\r\n    yield takeLatest(postAction.SHARE_POST_INIT,sharePostHandlerSaga)\r\n\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport rootReducer from \"./store/redux/root_redux\";\nimport {watch} from \"./store/saga/root_saga\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watch);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}